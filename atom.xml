<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sheldon&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2024-02-18T09:27:10.623Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sheldon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cocoapods结构解析</title>
    <link href="http://yoursite.com/2020/09/20/cocoapods%E7%BB%93%E6%9E%84%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2020/09/20/cocoapods结构解析/</id>
    <published>2020-09-20T08:23:29.000Z</published>
    <updated>2024-02-18T09:27:10.623Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>CocoaPods是用 Ruby 写的，并由若干个 Ruby 包 (gems) 构成的。在解析整合过程中，最重要的几个 gems 分别是： CocoaPods/CocoaPods, CocoaPods/Core, 和 CocoaPods/Xcodeproj (是的，CocoaPods 是一个依赖管理工具 – 利用依赖管理进行构建的！)。<br>podspecs存储路径：~/.cocoapods<br>缓存文件存储路径：~/Library/Caches/CocoaPods</p></blockquote><a id="more"></a><h2 id="核心组件"><a href="#核心组件" class="headerlink" title="核心组件"></a>核心组件</h2><h3 id="CocoaPods-CocoaPod"><a href="#CocoaPods-CocoaPod" class="headerlink" title="CocoaPods/CocoaPod"></a>CocoaPods/CocoaPod</h3><p>这是是一个面向用户的组件，每当执行一个 pod 命令时，这个组件都将被激活。该组件包括了所有使用 CocoaPods 涉及到的功能，并且还能通过调用所有其它的 gems 来执行任务。</p><h3 id="CocoaPods-Core"><a href="#CocoaPods-Core" class="headerlink" title="CocoaPods/Core"></a>CocoaPods/Core</h3><p>Core 组件提供支持与 CocoaPods 相关文件的处理，文件主要是 Podfile 和 podspecs。</p><ul><li>Podfile：Podfile 是一个文件，用于定义项目所需要使用的第三方库。该文件支持高度定制，你可以根据个人喜好对其做出定制。更多相关信息，请查阅 Podfile 指南。</li><li>Podspec：.podspec 也是一个文件，该文件描述了一个库是怎样被添加到工程中的。它支持的功能有：列出源文件、framework、编译选项和某个库所需要的依赖等。</li></ul><h3 id="CocoaPods-Xcodeproj"><a href="#CocoaPods-Xcodeproj" class="headerlink" title="CocoaPods/Xcodeproj"></a>CocoaPods/Xcodeproj</h3><p>这个 gem 组件负责所有工程文件的整合。它能够对创建并修改 .xcodeproj 和 .xcworkspace 文件。它也可以作为单独的一个 gem 包使用。如果你想要写一个脚本来方便的修改工程文件，那么可以使用这个 gem。</p><h2 id="运行-pod-install-命令"><a href="#运行-pod-install-命令" class="headerlink" title="运行 pod install 命令"></a>运行 pod install 命令</h2><p>当运行 pod install 命令时会引发许多操作。要想深入了解这个命令执行的详细内容，可以在这个命令后面加上 –verbose。运行指令后会有如下操作：</p><h3 id="读取Podfile文件"><a href="#读取Podfile文件" class="headerlink" title="读取Podfile文件"></a>读取Podfile文件</h3><p>在安装期间，第一步是要弄清楚显示或隐式的声明了哪些第三方库。在加载 podspecs 过程中，CocoaPods 就建立了包括版本信息在内的所有的第三方库的列表。Podspecs 被存储在本地路径 ~/.cocoapods 中。</p><h3 id="版本控制和冲突"><a href="#版本控制和冲突" class="headerlink" title="版本控制和冲突"></a>版本控制和冲突</h3><p>如果依赖的某些库同时使用了一个第三方库，但是版本不同，那么默认是向后兼容，既高版本的兼容低版本的；<br>但是，总会有一些第三方库会存在不能向后兼容的问题，这时候就需要手动解决兼容问题。比如：同时依赖了一个库的1.2.5和2.1.3，那么需要用户通过明确指定使用的版本来解决冲突。</p><h3 id="加载源文件"><a href="#加载源文件" class="headerlink" title="加载源文件"></a>加载源文件</h3><p>CocoaPods 执行的下一步是加载源码。每个 .podspec 文件都包含一个源代码的索引，这些索引一般包裹一个 git 地址和 git tag。它们以 commit SHAs 的方式存储在 ~/Library/Caches/CocoaPods 中。这个路径中文件的创建是由 Core gem 负责的。<br>CocoaPods 将依照 Podfile、.podspec 和缓存文件的信息将源文件下载到 Pods 目录中。</p><h3 id="生成Pod-xcodeproj"><a href="#生成Pod-xcodeproj" class="headerlink" title="生成Pod.xcodeproj"></a>生成Pod.xcodeproj</h3><p>每次 pod install 执行，如果检测到改动时，CocoaPods 会利用 Xcodeproj gem 组件对 Pods.xcodeproj 进行更新。如果该文件不存在，则用使用默认配置。否则，会将已有的配置项加载至内存中。</p><h3 id="安装第三方库"><a href="#安装第三方库" class="headerlink" title="安装第三方库"></a>安装第三方库</h3><p>当cocoapods往工程中添加一个第三方库时，不仅仅是添加了第三方库的源码，还会添加很多内容。由于每个第三方库会有一个独立的target，因此对于每个库，都会添加几个额外的文件：</p><ul><li>一个包含编译选项的.xcconfig文件</li><li>一个同时包含编译设置和CocoaPods默认配置的私有.xcconfig文件</li><li>一个编译所必须的prefix.pch文件</li><li>一个编译必须的dummy.m文件</li></ul><p>如果源码中包含资源bundle，那么在target的执行脚本Pods-Resources.sh中会添加bundle相关的指令。<br>还有一个Pods-environment.h文件，其中包含一些宏，这些宏是用来检测某个组件是否来自pod。<br>最后，将生成两个认可文件，一个是 plist，另一个是 markdown，这两个文件用于给最终用户查阅相关许可信息。</p><ul><li>Podfile.lock</li></ul><p>该文件记录了Pod中的依赖的每个组件，以及依赖组件的版本</p><ul><li>Manifest.lock</li></ul><p>这是每次运行 pod install 命令时创建的 Podfile.lock 文件的副本。如果你遇见过这样的错误 沙盒文件与 Podfile.lock 文件不同步 (The sandbox is not in sync with the Podfile.lock)。这是因为 Manifest.lock 文件和 Podfile.lock 文件不一致所引起。由于 Pods 所在的目录并不总在版本控制之下，这样可以保证开发者运行 app 之前都能更新他们的 pods，否则 app 可能会 crash，或者在一些不太明显的地方编译失败。</p><h2 id="xcproj"><a href="#xcproj" class="headerlink" title="xcproj"></a>xcproj</h2><p>如果你已经依照我们的建议在系统上安装了 xcproj，它会对 Pods.xcodeproj 文件执行一下 touch 以将其转换成为旧的 ASCII plist 格式的文件。为什么要这么做呢？虽然在很久以前就不被其它软件支持了，但是 Xcode 仍然依赖于这种格式。如果没有 xcproj，你的 Pods.xcodeproj 文件将会以 XML 格式的 plist 文件存储，当你用 Xcode 打开它时，它会被改写，并造成大量的文件改动。</p><h3 id="文件结构变化"><a href="#文件结构变化" class="headerlink" title="文件结构变化"></a>文件结构变化</h3><p>执行pod install 后，我们的工程结构发生了变化，在以前的基础上添加了如下文件：</p><ol><li>PodFile：依赖描述文件</li><li>Podfile.lock：当前安装的依赖库的版本</li><li>xxx.xcworkspace：xcworkspace文件，使用CocoaPod管理依赖的项目，XCode只能使用workspace编译项目，如果还只打开以前的xcodeproj文件进行开发，编译会失败 xcworkspace文件实际是一个文件夹，实际Workspace信息保存在contents.xcworkspacedata里，该文件的内容非常简单，实际上只指示它所使用的工程的文件目录</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">Workspace</span></span></span><br><span class="line"><span class="tag">   <span class="attr">version</span> = <span class="string">"1.0"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">FileRef</span></span></span><br><span class="line"><span class="tag">      <span class="attr">location</span> = <span class="string">"group:CardPlayer/CardPlayer.xcodeproj"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">FileRef</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">FileRef</span></span></span><br><span class="line"><span class="tag">      <span class="attr">location</span> = <span class="string">"group:Pods/Pods.xcodeproj"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">FileRef</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Workspace</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>Pods/</li></ol><ul><li>Pods.xcodeproj，所有的第三方库都由Pods工程构建，每个三方库对应一个Pods工程中的Target。</li><li>每个第三方库都会在Pods目录下对应一个目录。</li><li>Headers，在Headers文件中有两个目录，Private和Public，其中包含第三方库的私有和公有的头文件，这些文件都是快捷连接，其真正的位置在每个三方库的文件夹目录下。</li></ul><p><img src="https://s1.ax1x.com/2020/09/25/09o0VP.jpg" alt="header结构"></p><ol><li>Target Support Files 支撑Target的文件</li></ol><p><img src="https://s1.ax1x.com/2020/09/25/09oYgH.jpg" alt="Target Support Files"></p><h2 id="工程结构的变化"><a href="#工程结构的变化" class="headerlink" title="工程结构的变化"></a>工程结构的变化</h2><h3 id="Pods工程变化"><a href="#Pods工程变化" class="headerlink" title="Pods工程变化"></a>Pods工程变化</h3><p>Pods工程会为每个依赖的第三方库定义一个Target，还会定义一个Pods-xxx的Target，每个Target会生成一个静态库<br><img src="https://s1.ax1x.com/2020/09/25/09oUKA.png" alt="Pods结构"></p><p>Pods工程会新建两个Configuration，每个Configuration会为不同的Target设置不同的xcconfig，xcconfig指出了头文件查找的目录，要链接的第三方，链接目录等。<br><img src="https://s1.ax1x.com/2020/09/25/09osPS.png" alt="7"><br>AFNetworking.xcconfig文件的内容：</p><p>CONFIGURATION_BUILD_DIR = $PODS_CONFIGURATION_BUILD_DIR/AFNetworking<br>GCC_PREPROCESSOR_DEFINITIONS = $(inherited) COCOAPODS=1<br>HEADER_SEARCH_PATHS = “${PODS_ROOT}/Headers/Private” “${PODS_ROOT}/Headers/Private/AFNetworking” “${PODS_ROOT}/Headers/Public” “${PODS_ROOT}/Headers/Public/AFNetworking”<br>OTHER_LDFLAGS = -framework “CoreGraphics” -framework “MobileCoreServices” -framework “Security” -framework “SystemConfiguration”<br>PODS_BUILD_DIR = $BUILD_DIR<br>PODS_CONFIGURATION_BUILD_DIR = $PODS_BUILD_DIR/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)<br>PODS_ROOT = ${SRCROOT}<br>PODS_TARGET_SRCROOT = ${PODS_ROOT}/AFNetworking<br>PRODUCT_BUNDLE_IDENTIFIER = org.cocoapods.${PRODUCT_NAME:rfc1034identifier}<br>SKIP_INSTALL = YES</p><p>Header_SERACH_PATHS：编译时查找头文件的目录<br>OTHER_LD_FLAGS：指明要链接的framework</p><p>Pods-CardPlayer.debug.xcconfig文件的内容：</p><p>GCC_PREPROCESSOR_DEFINITIONS = $(inherited) COCOAPODS=1<br>HEADER_SEARCH_PATHS = $(inherited) “${PODS_ROOT}/Headers/Public” “${PODS_ROOT}/Headers/Public/AFNetworking”<br>LIBRARY_SEARCH_PATHS = $(inherited) “$PODS_CONFIGURATION_BUILD_DIR/AFNetworking”<br>OTHER_CFLAGS = $(inherited) -isystem “${PODS_ROOT}/Headers/Public” -isystem “${PODS_ROOT}/Headers/Public/AFNetworking”<br>OTHER_LDFLAGS = $(inherited) -ObjC -l”AFNetworking” -framework “CoreGraphics” -framework “MobileCoreServices” -framework “Security” -framework “SystemConfiguration”<br>PODS_BUILD_DIR = $BUILD_DIR<br>PODS_CONFIGURATION_BUILD_DIR = $PODS_BUILD_DIR/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)<br>PODS_PODFILE_DIR_PATH = ${SRCROOT}/..<br>PODS_ROOT = ${SRCROOT}/../Pods</p><p>OTHER_LDFLAGS：说明了编译Pods时需要链接的第三方库，还需要链接其它framework<br>所以我们在xcode里能看到AFNetworking依赖的framework:</p><p><img src="https://s1.ax1x.com/2020/09/25/09odbt.png" alt="6"></p><h3 id="主工程变化"><a href="#主工程变化" class="headerlink" title="主工程变化"></a>主工程变化</h3><p>引入CocoaPods后，主工程的设置也会发生相应的变化，引入之前：<br><img src="https://s1.ax1x.com/2020/09/25/09oBUf.png" alt="4"></p><p>Debug和Release中的Configuration没有设置任何配置文件，引入CocoaPods后的变化：<br><img src="https://s1.ax1x.com/2020/09/25/09oaDI.jpg" alt="3"><br>可以看到，采用CocoaPods之后，Debug和Release设置了相应的配置文件，这些配置文件指明了头文件的查找目录和要链接的第三方库</p><h2 id="编译并链接第三方库"><a href="#编译并链接第三方库" class="headerlink" title="编译并链接第三方库"></a>编译并链接第三方库</h2><p><a href="http://www.srcmini.com/3965.html" target="_blank" rel="noopener">Podfile语法中文参考文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;CocoaPods是用 Ruby 写的，并由若干个 Ruby 包 (gems) 构成的。在解析整合过程中，最重要的几个 gems 分别是： CocoaPods/CocoaPods, CocoaPods/Core, 和 CocoaPods/Xcodeproj (是的，CocoaPods 是一个依赖管理工具 – 利用依赖管理进行构建的！)。&lt;br&gt;podspecs存储路径：~/.cocoapods&lt;br&gt;缓存文件存储路径：~/Library/Caches/CocoaPods&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>linux 配置远程登录服务器</title>
    <link href="http://yoursite.com/2020/01/21/linux%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2020/01/21/linux配置远程登录服务器/</id>
    <published>2020-01-21T13:51:58.000Z</published>
    <updated>2024-02-18T09:27:10.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建服务器"><a href="#创建服务器" class="headerlink" title="创建服务器"></a>创建服务器</h2><p>创建谷歌GCP服务器</p><h2 id="在服务器配置sshd-config"><a href="#在服务器配置sshd-config" class="headerlink" title="在服务器配置sshd_config"></a>在服务器配置sshd_config</h2><h3 id="登录服务器"><a href="#登录服务器" class="headerlink" title="登录服务器"></a>登录服务器</h3><p>打开终端, 输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@&lt;这里是你服务器的ip地址&gt;</span><br></pre></td></tr></table></figure><p>输入密码, 就完成了服务器的登录</p><h3 id="使用vim打开sshd-config文件"><a href="#使用vim打开sshd-config文件" class="headerlink" title="使用vim打开sshd_config文件"></a>使用vim打开<code>sshd_config</code>文件</h3><p>在服务器中打开sshd_config文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>修改<code>sshd_config</code>文件中的几个地方</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RSAAuthentication yes     <span class="comment"># RSA认证</span></span><br><span class="line">PubkeyAuthentication yes  <span class="comment"># 公钥认证</span></span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys  <span class="comment"># 公钥认证文件路径</span></span><br></pre></td></tr></table></figure><h2 id="本地生成ssh-keygen"><a href="#本地生成ssh-keygen" class="headerlink" title="本地生成ssh-keygen"></a>本地生成ssh-keygen</h2><p>回到本地, 使用<code>ssh-keygen</code>生成公钥和私钥</p><h2 id="将生成的public-key放到服务器"><a href="#将生成的public-key放到服务器" class="headerlink" title="将生成的public key放到服务器"></a>将生成的public key放到服务器</h2><p>进入<code>/.ssh</code>目录, 执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -n ~/.ssh/id_rsa.pub&gt;&gt;root@&lt;这里是你服务器的ip地址&gt;:~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>期间会输入服务器的密码.</p><h2 id="本地创建ssh的config文件-并配置host"><a href="#本地创建ssh的config文件-并配置host" class="headerlink" title="本地创建ssh的config文件, 并配置host"></a>本地创建ssh的config文件, 并配置host</h2><p>在本机的目录<code>~/.ssh</code>下创建config文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch config</span><br></pre></td></tr></table></figure><p>然后使用vim打开进行编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ssh模版</span></span><br><span class="line">Host            hostname</span><br><span class="line">HostName        xxx.xxx.xxx.xxx</span><br><span class="line">Port            22</span><br><span class="line">User            root <span class="comment"># 用户名</span></span><br><span class="line">ServerAliveInterval 60 <span class="comment"># 每隔60秒 发送KeepAlive请求，保证不会因为超时空闲断开</span></span><br><span class="line">IdentityFile    ~/.ssh/id_rsa <span class="comment">#私钥地址</span></span><br></pre></td></tr></table></figure><h2 id="使用配置好的Host登录远端服务器"><a href="#使用配置好的Host登录远端服务器" class="headerlink" title="使用配置好的Host登录远端服务器"></a>使用配置好的Host登录远端服务器</h2><p>使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh &lt;刚才配置的HostName&gt;</span><br></pre></td></tr></table></figure><p>就完成了登录</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;创建服务器&quot;&gt;&lt;a href=&quot;#创建服务器&quot; class=&quot;headerlink&quot; title=&quot;创建服务器&quot;&gt;&lt;/a&gt;创建服务器&lt;/h2&gt;&lt;p&gt;创建谷歌GCP服务器&lt;/p&gt;
&lt;h2 id=&quot;在服务器配置sshd-config&quot;&gt;&lt;a href=&quot;#在服务器配置
      
    
    </summary>
    
      <category term="hide" scheme="http://yoursite.com/categories/hide/"/>
    
    
      <category term="hide" scheme="http://yoursite.com/tags/hide/"/>
    
  </entry>
  
  <entry>
    <title>Mac配置Vim</title>
    <link href="http://yoursite.com/2019/08/28/Mac%E9%85%8D%E7%BD%AEVim/"/>
    <id>http://yoursite.com/2019/08/28/Mac配置Vim/</id>
    <published>2019-08-28T10:51:29.000Z</published>
    <updated>2024-02-18T09:27:10.622Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>相信不少同学在Mac上使用过<code>vi</code>或者<code>vim</code>命令，这个命令是打开mac自带的vim编辑器的命令，如果只是简单的修改文件，使用vim无疑是很方便的；但是如果使用mac自带的vim来做大量文档编辑的工作，那就可能力不从心了。<br>这个时候，你就需要更复杂的vim编辑器来负担这样的工作了,Mac目前有两个Vim客户端可供我们使用<br>1、<strong>MacVim：</strong>使用Cocoa GUI，这是Mac上更新还很活跃的版本，也是Mac上最多人使用的版本。<a href="https://github.com/macvim-dev/macvim" target="_blank" rel="noopener">下载地址</a><br>2、使用Carbon GUI的版本，但是这个版本目前基本上不再更新。<a href="http://sourceforge.net/projects/macosxvim/files/" target="_blank" rel="noopener">下载地址</a></p></blockquote><a id="more"></a><p>我主要是使用的<strong>MacVim</strong>，所以就记录一下MacVim的安装以及使用过程。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>从上面提供的链接下载MacVim，并按照安装mac应用的步骤安装好MavVim。这个时候还没有结束。</p><p>想象一下，我们以前在terminal中打开一个文件是这样的：<code>vi &lt;文件名称&gt;</code>，这样很coooooooooool；</p><p>但是，我们现在使用MacVim，却得鼠标点击打开MacVim，然后再从MacVim打开文件。这样是不是比以前繁琐了很多。那么，能不能像从前一样，使用命令打开文件呢？</p><p>答案是可以的。</p><p>我们先把MacVim打开,第一次打开MacVim是这个样子：</p><p><img src="https://s2.ax1x.com/2019/08/28/m7xckQ.jpg" alt="第一次打开MacVim"></p><p>在MacVim的界面中我们输入<code>:h mvim</code>，MacVim会提示我们将<code>mvim</code>命令的路径添加到我们的PATH</p><p><img src="https://s2.ax1x.com/2019/08/28/m7xgYj.jpg" alt="提示"></p><p><strong>添加PATH步骤：</strong></p><ol><li><code>vi ~/.bash_podfile</code>打开PATH所在路径</li><li>将MacVim提供的命令路径写入PATH：<code>export PATH=/Applications/MacVim.app/Contents/bin:$PATH</code></li><li>执行<code>source ~/.bash_podfile</code>重启bash</li></ol><p>这个时候，我们就可以直接在Terminal中使用<code>mvim</code>命令来打开文件了。</p><p>是不是觉得输入mvim命令还是不如vim命令舒服？那么我们就使用vim来打开MacVim!</p><p>使用命令<code>mvim ~/.zshrc</code> 或者<code>mvim ~/.bashrc</code>，如果你使用的是zsh那么使用前者，如果使用的是bash，那么使用后者。</p><p>打开后，在文件末尾新增一段文字<code>alias vim=&#39;mvim&#39;</code>，意思就是给mvim命令起一个别名。</p><p>然后保存退出，如果你是zsh使用<code>source ~/.zshrc</code>重新载入，如果是bash使用<code>source ~/.bashrc</code>载入。</p><p>接下来就是见证奇迹的时刻了，输入命令<code>vim &lt;你要打开的文档&gt;</code>，看看是不是使用MacVim打开了!</p><h2 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h2><blockquote><p>经过上面的一系列骚操作，现在我们可以使用MacVim正常的进行编辑了，但是，我们还可以对MacVim进行更深层次的扩展，那就是给MacVim添加插件！</p></blockquote><h3 id="Vundle-命令"><a href="#Vundle-命令" class="headerlink" title="Vundle 命令"></a>Vundle 命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">:BundleInstall</span><br><span class="line"><span class="comment"># 更新插件</span></span><br><span class="line">:BundleUpdate</span><br><span class="line"><span class="comment"># 清除不需要的插件</span></span><br><span class="line">:BundleClean</span><br><span class="line"><span class="comment"># 列出当前的插件</span></span><br><span class="line">:BundleList</span><br><span class="line"><span class="comment"># 搜索插件</span></span><br><span class="line">:BundleSearch</span><br></pre></td></tr></table></figure><h2 id="配置-vimrc文件"><a href="#配置-vimrc文件" class="headerlink" title="配置~/.vimrc文件"></a>配置~/.vimrc文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" 关闭vim的所有扩展功能</span></span><br><span class="line"><span class="string">set nocompatible</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 配置插件路径</span><br><span class="line"><span class="built_in">set</span> rtp+=~/.vim/bundle/vundle/  </span><br><span class="line">call vundle<span class="comment">#begin()</span></span><br><span class="line"></span><br><span class="line"><span class="string">" 在这里添加你想安装的Vim插件</span></span><br><span class="line"><span class="string">Bundle 'gmarik/vundle'</span></span><br><span class="line"><span class="string">"</span> Python补全强力插件</span><br><span class="line">Bundle <span class="string">'davidhalter/jedi'</span></span><br><span class="line"><span class="string">" 添加引号,括号配对补全</span></span><br><span class="line"><span class="string">Bundle 'jiangmiao/auto-pairs'</span></span><br><span class="line"><span class="string">"</span> 添加/解除注释</span><br><span class="line">Bundle <span class="string">'scrooloose/nerdcommenter'</span></span><br><span class="line"></span><br><span class="line">call vundle<span class="comment">#end()       " required</span></span><br><span class="line"></span><br><span class="line"><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">"</span> 一般设定</span><br><span class="line"><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">"</span> 设定默认解码</span><br><span class="line"><span class="built_in">set</span> fenc=utf-8</span><br><span class="line"><span class="built_in">set</span> fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936</span><br><span class="line"></span><br><span class="line"><span class="string">"去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限</span></span><br><span class="line"><span class="string">set nocompatible</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 显示中文帮助</span><br><span class="line"><span class="keyword">if</span> version &gt;= 603</span><br><span class="line">    <span class="built_in">set</span> helplang=cn</span><br><span class="line">    <span class="built_in">set</span> encoding=utf-8</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line"><span class="string">" 语法高亮</span></span><br><span class="line"><span class="string">syntax on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 设置配色</span><br><span class="line">colorscheme solarized  <span class="string">"可能需要提前下载</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 设置字体</span><br><span class="line"><span class="built_in">set</span> guifont=Monaco:h14</span><br><span class="line"></span><br><span class="line"><span class="string">" 设置gvim启动窗口的位置，以及大小</span></span><br><span class="line"><span class="string">"</span> winpos 300 105</span><br><span class="line"><span class="string">" set lines=30 columns=100</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 开启行号显示</span><br><span class="line"><span class="built_in">set</span> number</span><br><span class="line"></span><br><span class="line"><span class="string">"下面两行在进行编写代码时，在格式对起上很有用；</span></span><br><span class="line"><span class="string">"</span>第一行，vim使用自动对起，也就是把当前行的对起格式应用到下一行；</span><br><span class="line"><span class="string">"第二行，依据上面的对起格式，智能的选择对起方式，对于类似C语言编</span></span><br><span class="line"><span class="string">"</span>写上很有用</span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"></span><br><span class="line"><span class="string">"查询时非常方便，如要查找book单词，当输入到/b时，会自动找到第一</span></span><br><span class="line"><span class="string">"</span>个b开头的单词，当输入到/bo时，会自动找到第一个bo开头的单词，依</span><br><span class="line"><span class="string">"次类推，进行查找时，使用此设置会快速找到答案，当你找要匹配的单词</span></span><br><span class="line"><span class="string">"</span>时，别忘记回车</span><br><span class="line"><span class="built_in">set</span> incsearch</span><br><span class="line"></span><br><span class="line"><span class="string">" 高亮当前行</span></span><br><span class="line"><span class="string">set cursorline</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 启动的时候不显示那个援助索马里儿童的提示</span><br><span class="line"><span class="built_in">set</span> shortmess=atI</span><br><span class="line"></span><br><span class="line"><span class="string">" 我的状态行显示的内容（包括文件类型和解码）</span></span><br><span class="line"><span class="string">set statusline=%F%m%r%h%w\[POS=%l,%v][%p%%]\%&#123;strftime(\"%d/%m/%y\ -\ %H:%M\")&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 总是显示状态行</span><br><span class="line"><span class="built_in">set</span> laststatus=2</span><br><span class="line"></span><br><span class="line"><span class="string">" 制表符为4</span></span><br><span class="line"><span class="string">set tabstop=4</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 统一缩进为4</span><br><span class="line"><span class="built_in">set</span> softtabstop=4</span><br><span class="line"><span class="built_in">set</span> shiftwidth=4</span><br><span class="line"></span><br><span class="line"><span class="string">" 在c,c++,python文件中用空格代替制表符</span></span><br><span class="line"><span class="string">autocmd FileType c,cpp,python set shiftwidth=4 | set expandtab</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 侦测文件类型</span><br><span class="line">filetype on</span><br><span class="line"></span><br><span class="line"><span class="string">" 载入文件类型插件</span></span><br><span class="line"><span class="string">filetype plugin on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 为特定文件类型载入相关缩进文件</span><br><span class="line">filetype indent on</span><br><span class="line">   <span class="string">" 如果文件类型为.sh文件</span></span><br><span class="line"><span class="string">    if &amp;filetype == 'sh'</span></span><br><span class="line"><span class="string">        call setline(1,</span></span><br><span class="line"><span class="string">        "</span>\<span class="comment">#########################################################################")</span></span><br><span class="line">        call append(line(<span class="string">"."</span>), <span class="string">"\# File Name: "</span>.expand(<span class="string">"%"</span>))</span><br><span class="line">        call append(line(<span class="string">"."</span>)+1, <span class="string">"\# Author: Sheldon"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+2, <span class="string">"\# mail: tinarychina@gmail.com"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+3, <span class="string">"\# Created Time: "</span>.strftime(<span class="string">"%F %R"</span>))</span><br><span class="line">        call append(line(<span class="string">"."</span>)+4, <span class="string">"\#########################################################################"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+5, <span class="string">"\#!/bin/bash"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+6, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        call setline(1, <span class="string">"/*************************************************************************"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>), <span class="string">"    &gt; File Name: "</span>.expand(<span class="string">"%"</span>))</span><br><span class="line">        call append(line(<span class="string">"."</span>)+1, <span class="string">"    &gt; Author: Sheldon"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+2, <span class="string">"    &gt; Mail: tinarychina@gmail.com "</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+3, <span class="string">"    &gt; Created Time: "</span>.strftime(<span class="string">"%F %R"</span>))</span><br><span class="line">        call append(line(<span class="string">"."</span>)+4, <span class="string">" ************************************************************************/"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+5, <span class="string">""</span>)</span><br><span class="line">    endif</span><br><span class="line">    <span class="keyword">if</span> &amp;filetype == <span class="string">'python'</span></span><br><span class="line">        call append(line(<span class="string">"."</span>)+5, <span class="string">"\#!/usr/bin/env python"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+6, <span class="string">"\#coding: utf-8"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+7, <span class="string">""</span>)</span><br><span class="line">    endif</span><br><span class="line">    <span class="keyword">if</span> &amp;filetype == <span class="string">'cpp'</span></span><br><span class="line">        call append(line(<span class="string">"."</span>)+6, <span class="string">"#include&lt;iostream&gt;"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+7, <span class="string">"using namespace std;"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+8, <span class="string">""</span>)</span><br><span class="line">    endif</span><br><span class="line">    <span class="keyword">if</span> &amp;filetype == <span class="string">'c'</span></span><br><span class="line">        call append(line(<span class="string">"."</span>)+6, <span class="string">"#include&lt;stdio.h&gt;"</span>)</span><br><span class="line">        call append(line(<span class="string">"."</span>)+7, <span class="string">""</span>)</span><br><span class="line">    endif</span><br><span class="line">    <span class="string">" 新建文件后，自动定位到文件末尾</span></span><br><span class="line"><span class="string">    autocmd BufNewFile * normal G</span></span><br><span class="line"><span class="string">endfunc</span></span><br></pre></td></tr></table></figure><h2 id="vim-安装主题"><a href="#vim-安装主题" class="headerlink" title="vim 安装主题"></a>vim 安装主题</h2><p>在<code>~/.vim/</code>路径下新建一个<strong>colors</strong>文件夹，然后下载主题，例如：<a href="https://github.com/tomasr/molokai，将下载好的molokai.vim放入colors文件夹中。" target="_blank" rel="noopener">https://github.com/tomasr/molokai，将下载好的molokai.vim放入colors文件夹中。</a></p><p>使用vim打开<code>~/.vimrc</code>，并添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot; 代码颜色主题</span><br><span class="line">syntax on</span><br><span class="line">syntax enable</span><br><span class="line">set t_Co=256</span><br><span class="line">colorscheme molokai</span><br></pre></td></tr></table></figure></p><p>然后重新打开vim编辑器，就发现主题已经更换了</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;相信不少同学在Mac上使用过&lt;code&gt;vi&lt;/code&gt;或者&lt;code&gt;vim&lt;/code&gt;命令，这个命令是打开mac自带的vim编辑器的命令，如果只是简单的修改文件，使用vim无疑是很方便的；但是如果使用mac自带的vim来做大量文档编辑的工作，那就可能力不从心了。&lt;br&gt;这个时候，你就需要更复杂的vim编辑器来负担这样的工作了,Mac目前有两个Vim客户端可供我们使用&lt;br&gt;1、&lt;strong&gt;MacVim：&lt;/strong&gt;使用Cocoa GUI，这是Mac上更新还很活跃的版本，也是Mac上最多人使用的版本。&lt;a href=&quot;https://github.com/macvim-dev/macvim&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;&lt;br&gt;2、使用Carbon GUI的版本，但是这个版本目前基本上不再更新。&lt;a href=&quot;http://sourceforge.net/projects/macosxvim/files/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://yoursite.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>zsh命令大全</title>
    <link href="http://yoursite.com/2019/08/28/zsh%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <id>http://yoursite.com/2019/08/28/zsh命令大全/</id>
    <published>2019-08-28T10:00:09.000Z</published>
    <updated>2024-02-18T09:27:10.626Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>bash和zsh两种shell功能非常相似，只不过zsh的功能比bash更强大一些。这两种shell的快捷键命令也非常相似，对于常用shell的人来说，了解一些快捷键操作将会十分有益，因为使用快捷键将能大大节约操作时间。大部分快捷键是用来快速导航或编辑当前命令行。</p></blockquote><p>但是！！！</p><p>记不住呀，所以记录一下~</p><a id="more"></a><p>⌃ + u：清空当前行</p><p>⌃ + a：移动到行首</p><p>⌃ + e：移动到行尾</p><p>⌃ + f：向前移动</p><p>⌃ + b：向后移动</p><p>⌃ + p：上一条命令</p><p>⌃ + n：下一条命令</p><p>⌃ + r：搜索历史命令</p><p>⌃ + y：召回最近用命令删除的文字</p><p>⌃ + h：删除光标之前的字符</p><p>⌃ + d：删除光标所指的字符</p><p>⌃ + w：删除光标之前的单词</p><p>⌃ + k：删除从光标到行尾的内容</p><p>⌃ + t：交换光标和之前的字符</p><p>⌘ + Click：可以打开文件，文件夹和链接</p><p>⌘ + n：新建窗口</p><p>⌘ + t：新建标签页</p><p>⌘ + w：关闭当前页</p><p>⌘ + 数字&amp;⌘ + 方向键：切换标签页</p><p>⌥⌘ + 数字：切换窗口</p><p>⌘ + enter：切换全屏</p><p>⌘ + d：左右分屏</p><p>⇧⌘ + d：上下分屏</p><p>⌘ + ;：自动补全历史记录</p><p>⇧⌘ + h：自动补全剪贴板历史</p><p>⌥⌘ + e：查找所有来定位某个标签页</p><p>⌘ + r&amp;⌃ + l：清屏</p><p>⌘ + /：显示光标位置</p><p>⌥⌘ + b：历史回放</p><p>⌘ + f：查找，然后用tab和⇧ + tab可以向右和向左补全，补全之后的内容会被自动复制， 还可以用⌥ + enter将查找结果输入终端</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;bash和zsh两种shell功能非常相似，只不过zsh的功能比bash更强大一些。这两种shell的快捷键命令也非常相似，对于常用shell的人来说，了解一些快捷键操作将会十分有益，因为使用快捷键将能大大节约操作时间。大部分快捷键是用来快速导航或编辑当前命令行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是！！！&lt;/p&gt;
&lt;p&gt;记不住呀，所以记录一下~&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://yoursite.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac终端神器--iTerm2</title>
    <link href="http://yoursite.com/2019/08/28/Mac%E7%BB%88%E7%AB%AF%E7%A5%9E%E5%99%A8-iTerm2/"/>
    <id>http://yoursite.com/2019/08/28/Mac终端神器-iTerm2/</id>
    <published>2019-08-28T03:57:24.000Z</published>
    <updated>2024-02-18T09:27:10.622Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>打造人见人爱的终端</p></blockquote><a id="more"></a><h2 id="下载iTerm2"><a href="#下载iTerm2" class="headerlink" title="下载iTerm2"></a>下载iTerm2</h2><blockquote><p><a href="https://www.iterm2.com/" target="_blank" rel="noopener">官网下载</a></p></blockquote><p>安装完成后，在<code>/bin</code>目录下会多出一个zsh的文件。</p><p>Mac系统默认使用dash作为终端，可以使用命令修改默认使用zsh：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;打造人见人爱的终端&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git贮藏（Stashing）</title>
    <link href="http://yoursite.com/2019/08/22/Git%E8%B4%AE%E8%97%8F%EF%BC%88Stashing%EF%BC%89/"/>
    <id>http://yoursite.com/2019/08/22/Git贮藏（Stashing）/</id>
    <published>2019-08-22T06:53:30.000Z</published>
    <updated>2024-02-18T09:27:10.622Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我们在工作中经常会遇到一种情况，当我们在项目的当前分支修改了一些代码，工作进行到一半，又需要去其他的分支处理一些事情；这个时候，你不想把修改了一半的代码提交到git，但不提交又无法切到其他分支；怎么办呢？</p></blockquote><a id="more"></a><p>我们可以使用Git的一个功能——Stashing（贮藏）。</p><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>Stashing可以将当前工作区已修改状态下的文件储存起来，在栈中增加一条存储。</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="列出所有的存储列表"><a href="#列出所有的存储列表" class="headerlink" title="列出所有的存储列表"></a>列出所有的存储列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash list</span><br></pre></td></tr></table></figure><h3 id="应用存储"><a href="#应用存储" class="headerlink" title="应用存储"></a>应用存储</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>重新应用最后一次的存储，同时，将其从栈中移走。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply stash@&#123;0&#125;</span><br></pre></td></tr></table></figure><p>通过存储名应用到当前工作区，但并不会从栈中移除。</p><h3 id="取消贮藏"><a href="#取消贮藏" class="headerlink" title="取消贮藏"></a>取消贮藏</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash show -p stash@&#123;0&#125; | git apply -R</span><br></pre></td></tr></table></figure><p>取消之前所应用贮藏的修改。</p><h3 id="移除贮藏"><a href="#移除贮藏" class="headerlink" title="移除贮藏"></a>移除贮藏</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash drop &lt;stash name&gt;</span><br></pre></td></tr></table></figure><p>从栈中移除贮藏</p><h3 id="通过贮藏创建新分支"><a href="#通过贮藏创建新分支" class="headerlink" title="通过贮藏创建新分支"></a>通过贮藏创建新分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash branch &lt;branch name&gt;</span><br></pre></td></tr></table></figure><p>创建一个新的分支，并且检出你贮藏工作时所做的提交，重新应用于你的工作，如果成功，将会丢弃贮藏。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;我们在工作中经常会遇到一种情况，当我们在项目的当前分支修改了一些代码，工作进行到一半，又需要去其他的分支处理一些事情；这个时候，你不想把修改了一半的代码提交到git，但不提交又无法切到其他分支；怎么办呢？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>iOS搭建远程私有库</title>
    <link href="http://yoursite.com/2019/08/21/iOS%E6%90%AD%E5%BB%BA%E8%BF%9C%E7%A8%8B%E7%A7%81%E6%9C%89%E5%BA%93/"/>
    <id>http://yoursite.com/2019/08/21/iOS搭建远程私有库/</id>
    <published>2019-08-21T02:51:29.000Z</published>
    <updated>2024-02-18T09:27:10.625Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>iOS搭建远程私有库</p></blockquote><a id="more"></a><h2 id="一、创建远程私有索引库"><a href="#一、创建远程私有索引库" class="headerlink" title="一、创建远程私有索引库"></a>一、创建远程私有索引库</h2><blockquote><p>这个库的作用是存放索引文件</p></blockquote><h2 id="二、将远程索引库链接（下载）到本地"><a href="#二、将远程索引库链接（下载）到本地" class="headerlink" title="二、将远程索引库链接（下载）到本地"></a>二、将远程索引库链接（下载）到本地</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod repo add &lt;仓库名&gt; &lt;仓库源地址（SSH地址）&gt;</span><br></pre></td></tr></table></figure><h2 id="三、创建远程代码私有仓库"><a href="#三、创建远程代码私有仓库" class="headerlink" title="三、创建远程代码私有仓库"></a>三、创建远程代码私有仓库</h2><h3 id="1-在本地创建-pod-项目"><a href="#1-在本地创建-pod-项目" class="headerlink" title="1. 在本地创建 pod 项目"></a>1. 在本地创建 pod 项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod lib create &lt;pod库名字&gt;</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">Cloning `https://github.com/CocoaPods/pod-template.git` into `&lt;我的pod库名称，手动马赛克&gt;`.</span><br><span class="line">Configuring &lt;我的pod库名称，手动马赛克&gt; template.</span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line">To get you started we need to ask a few questions, this should only take a minute.</span><br><span class="line"></span><br><span class="line">If this is your first time we recommend running through with the guide:</span><br><span class="line"> - https://guides.cocoapods.org/making/using-pod-lib-create.html</span><br><span class="line"> ( hold cmd and click links to open <span class="keyword">in</span> a browser. )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">What platform <span class="keyword">do</span> you want to use?? [ iOS / macOS ]</span><br><span class="line"> &gt; iOS</span><br><span class="line"></span><br><span class="line">What language <span class="keyword">do</span> you want to use?? [ Swift / ObjC ]</span><br><span class="line"> &gt; ObjC</span><br><span class="line"></span><br><span class="line">Would you like to include a demo application with your library? [ Yes / No ]</span><br><span class="line"> &gt; Yes</span><br><span class="line"></span><br><span class="line">Which testing frameworks will you use? [ Specta / Kiwi / None ]</span><br><span class="line"> &gt; Kiwi</span><br><span class="line"></span><br><span class="line">Would you like to <span class="keyword">do</span> view based testing? [ Yes / No ]</span><br><span class="line"> &gt; Yes</span><br><span class="line"></span><br><span class="line">What is your class prefix?</span><br><span class="line"> &gt; TY</span><br><span class="line"></span><br><span class="line">Running pod install on your new library.</span><br><span class="line"></span><br><span class="line">Analyzing dependencies</span><br><span class="line">Fetching podspec <span class="keyword">for</span> `&lt;我的pod库名称，手动马赛克&gt;` from `../`</span><br><span class="line">Downloading dependencies</span><br><span class="line">Installing &lt;我的pod库名称，手动马赛克&gt; (0.1.0)</span><br><span class="line">Installing FBSnapshotTestCase (2.1.4)</span><br><span class="line">Installing Kiwi (3.0.0)</span><br><span class="line">Generating Pods project</span><br><span class="line">Integrating client project</span><br><span class="line"></span><br><span class="line">[!] Please close any current Xcode sessions and use `&lt;我的pod库名称，手动马赛克&gt;.xcworkspace` <span class="keyword">for</span> this project from now on.</span><br><span class="line">Sending stats</span><br><span class="line">Pod installation complete! There are 3 dependencies from the Podfile and 3 total pods installed.</span><br><span class="line"></span><br><span class="line"> Ace! you<span class="string">'re ready to go!</span></span><br><span class="line"><span class="string"> We will start you off by opening your project in Xcode</span></span><br><span class="line"><span class="string">  open '</span>&lt;我的pod库路径，手动马赛克&gt;<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To learn more about the template see `https://github.com/CocoaPods/pod-template.git`.</span></span><br><span class="line"><span class="string">To learn more about creating a new pod, see `https://guides.cocoapods.org/making/making-a-cocoapod`.</span></span><br></pre></td></tr></table></figure><h3 id="2-修改内容"><a href="#2-修改内容" class="headerlink" title="2. 修改内容"></a>2. 修改内容</h3><p>把需要提交的代码放到路径(当前项目根目录/项目名/Classes/)下面，删除ReplaceMe.m。</p><h3 id="3-修改-podspec文件"><a href="#3-修改-podspec文件" class="headerlink" title="3. 修改.podspec文件"></a>3. 修改.podspec文件</h3><h3 id="4-提交"><a href="#4-提交" class="headerlink" title="4. 提交"></a>4. 提交</h3><p>提交代码到本地pod库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"add file"</span></span><br><span class="line">git remote add origin &lt;远端pod库地址:https://gitlab.com/xxx.git&gt;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>打tag并提交tag到origin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag 0.1.0</span><br><span class="line">git push --tags</span><br></pre></td></tr></table></figure><p>验证本地spec文件是否有误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod lib lint</span><br></pre></td></tr></table></figure><p>验证远程spec文件是否有误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod spec lint</span><br></pre></td></tr></table></figure><p>上传.podspec索引文件到索引库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod repo push &lt;索引库名称&gt; &lt;.podspec文件名称&gt;  --allow-warnings --use-libraries --verbose</span><br></pre></td></tr></table></figure><p><strong>tip: </strong>消除pod库警告<code>inhibit_all_warnings!</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;iOS搭建远程私有库&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS常用第三方库整理</title>
    <link href="http://yoursite.com/2019/08/19/iOS%E5%B8%B8%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2019/08/19/iOS常用第三方库整理/</id>
    <published>2019-08-19T09:12:33.000Z</published>
    <updated>2024-02-18T09:27:10.624Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>整理我们在APP开发过程中经常或者必须使用的一些第三方的pod库。</p></blockquote><a id="more"></a><h2 id="主模块"><a href="#主模块" class="headerlink" title="主模块"></a>主模块</h2><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><ul><li><a href="https://github.com/SnapKit/Masonry" target="_blank" rel="noopener">Masonry</a> 代码布局</li><li><a href="https://github.com/forkingdog/UITableView-FDTemplateLayoutCell" target="_blank" rel="noopener">UITableView-FDTemplateLayoutCell</a> tableview自适应高度</li></ul><h3 id="指示器"><a href="#指示器" class="headerlink" title="指示器"></a>指示器</h3><ul><li><a href="https://github.com/jdg/MBProgressHUD" target="_blank" rel="noopener">MBProgressHUD</a></li><li><a href="https://github.com/SVProgressHUD/SVProgressHUD" target="_blank" rel="noopener">SVProgressHUD</a></li><li><a href="https://github.com/scalessec/Toast" target="_blank" rel="noopener">Toast</a></li><li><a href="https://github.com/CoderMJLee/MJRefresh" target="_blank" rel="noopener">MJRefresh</a></li></ul><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><ul><li><a href="https://github.com/AFNetworking/AFNetworking" target="_blank" rel="noopener">AFNetworking</a></li><li><a href="https://github.com/yuantiku/YTKNetwork" target="_blank" rel="noopener">YTKNetwork</a></li></ul><h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3><ul><li><a href="https://github.com/CoderMJLee/MJExtension" target="_blank" rel="noopener">MJExtension</a></li><li><a href="https://github.com/ibireme/YYModel" target="_blank" rel="noopener">YYModel</a></li><li><a href="https://github.com/protocolbuffers/protobuf" target="_blank" rel="noopener">Protobuf</a> 存储和读取结构化数据</li></ul><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ul><li><a href="https://github.com/ccgus/fmdb" target="_blank" rel="noopener">FMDB</a></li><li><a href="https://github.com/Tencent/wcdb" target="_blank" rel="noopener">WCDB</a></li></ul><h3 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h3><ul><li>JPush 极光</li></ul><h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><ul><li>UMengSocial 友盟</li></ul><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><ul><li><a href="https://github.com/SDWebImage/SDWebImage" target="_blank" rel="noopener">SDWebImage</a> 图片下载和缓存</li><li><a href="https://github.com/mwaterfall/MWPhotoBrowser" target="_blank" rel="noopener">MWPhotoBrowser</a> 图片浏览</li><li><a href="https://github.com/Flipboard/FLAnimatedImage" target="_blank" rel="noopener">FLAnimatedImage</a> gif动图加载</li><li><a href="https://github.com/gsdios/SDCycleScrollView" target="_blank" rel="noopener">SDCycleScrollView</a> 轮播图</li></ul><h3 id="音视频"><a href="#音视频" class="headerlink" title="音视频"></a>音视频</h3><ul><li><a href="https://github.com/LaiFengiOS/LFLiveKit" target="_blank" rel="noopener">LFLiveKit</a> RTMP streaming SDK for iOS.</li></ul><h3 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h3><ul><li><a href="https://github.com/TTTAttributedLabel/TTTAttributedLabel" target="_blank" rel="noopener">TTTAttributedLabel</a> 富文本</li><li><a href="https://github.com/ibireme/YYText" target="_blank" rel="noopener">YYText</a></li></ul><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><ul><li><a href="https://link.jianshu.com/?t=https://github.com/facebook/pop" target="_blank" rel="noopener">pop</a></li><li><a href="https://github.com/ChenYilong/CYLTabBarController" target="_blank" rel="noopener">CYLTabBarController</a> tabbar 动画</li></ul><h3 id="js-OC交互"><a href="#js-OC交互" class="headerlink" title="js-OC交互"></a>js-OC交互</h3><ul><li><a href="https://github.com/marcuswestin/WebViewJavascriptBridge" target="_blank" rel="noopener">WebViewJavascriptBridge</a></li></ul><h3 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h3><ul><li>Bugly</li><li><a href="https://github.com/kishikawakatsumi/UICKeyChainStore" target="_blank" rel="noopener">UICKeyChainStore</a> 钥匙串API</li><li><a href="https://github.com/tonymillion/Reachability" target="_blank" rel="noopener">Reachability</a> 网络情况监测</li><li><a href="https://github.com/CocoaLumberjack/CocoaLumberjack" target="_blank" rel="noopener">CocoaLumberjack</a> Mac和iOS上一个简捷、强大、灵活的日志框架</li><li><a href="https://github.com/didi/DoraemonKit" target="_blank" rel="noopener">DoraemonKit</a> 一款功能齐全的客户端（ iOS 、Android ）研发助手</li><li><a href="https://github.com/Tencent/MLeaksFinder" target="_blank" rel="noopener">MLeaksFinder</a> 内存泄露</li><li><a href="https://github.com/soffes/SAMKeychain" target="_blank" rel="noopener">SAMKeychain</a> 钥匙串API</li><li><a href="https://github.com/Flipboard/FLEX" target="_blank" rel="noopener">FLEX</a> 可以在app中进行debug</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="https://github.com/ibireme/YYKit" target="_blank" rel="noopener">YYKit</a></li><li><a href="https://github.com/hackiftekhar/IQKeyboardManager" target="_blank" rel="noopener">IQKeyboardManager</a> 键盘管理</li><li><a href="https://github.com/ReactiveCocoa/ReactiveObjC" target="_blank" rel="noopener">ReactiveObjC</a> RAC</li><li><a href="https://github.com/BlocksKit/BlocksKit" target="_blank" rel="noopener">BlocksKit</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;整理我们在APP开发过程中经常或者必须使用的一些第三方的pod库。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>WCDB的使用和封装</title>
    <link href="http://yoursite.com/2019/08/13/WCDB%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E5%B0%81%E8%A3%85/"/>
    <id>http://yoursite.com/2019/08/13/WCDB的使用和封装/</id>
    <published>2019-08-13T10:33:05.000Z</published>
    <updated>2024-02-18T09:27:10.623Z</updated>
    
    <content type="html"><![CDATA[<p>公司的项目所使用的数据库是FMDB，并对其进行了二次封装；由于年久失修，遂决定改为WCDB，因此，抽时间对WCDB进行了一番研究。<br><a href="https://github.com/Tencent/wcdb" target="_blank" rel="noopener">WCDB</a>是腾讯开源的一款供客户端使用的数据库，基于<a href="https://github.com/sqlcipher/sqlcipher" target="_blank" rel="noopener">SQLCipher</a>，支持iOS，macOS和Android。</p><a id="more"></a><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><h3 id="易用"><a href="#易用" class="headerlink" title="易用"></a>易用</h3><p>WCDB通过深度封装数据库语言，使开发者可以通过OC或者Swift的代码方式使用数据库，无需为了拼接SQL而写一大坨代码；</p><h3 id="高效"><a href="#高效" class="headerlink" title="高效"></a>高效</h3><p>WCDB通过框架层和<a href="https://github.com/sqlcipher/sqlcipher" target="_blank" rel="noopener">SQLCipher</a>源码优化，使其有更高效的表现；</p><h3 id="完整"><a href="#完整" class="headerlink" title="完整"></a>完整</h3><p>WCDB覆盖了数据库使用过程中大多数的使用场景和需求；</p><ul><li><strong>加密：</strong>WCDB提供基于<a href="https://github.com/sqlcipher/sqlcipher" target="_blank" rel="noopener">SQLCipher</a>的数据库加密。</li><li><strong>损坏修复：</strong>WCDB内建了Repair Kit用于修复损坏的数据库。</li><li><strong>反注入：</strong>WCDB内建了对SQL注入的保护。</li></ul><h2 id="安装WCDB"><a href="#安装WCDB" class="headerlink" title="安装WCDB"></a>安装WCDB</h2><p>使用Cocoapods安装WCDB：</p><ol><li>更新pod repo：<code>pod repo update</code></li><li>在Podfile对应的target中，添加<code>pod &#39;WCDB&#39;</code></li><li>执行<code>pod install --verbose</code></li><li>打开workspace</li><li>引入头文件’#import <wcdb wcdb.h>‘</wcdb></li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用WCD分为2部分：<strong>ORM</strong>和<strong>CRUD</strong>。</p><h3 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h3><p>ORM的作用就是映射数据库字段和我们的数据模型；WCDB使用内置的宏来连接类、属性与表、字段。共有三类宏，分别对应数据库的字段、索引和约束。</p><h4 id="字段宏"><a href="#字段宏" class="headerlink" title="字段宏"></a>字段宏</h4><p>字段宏以WCDB_SYNTHESIZE开头，定义了类属性与字段之间的联系。</p><ul><li><code>WCDB_SYNTHESIZE(className, propertyName)</code>是最简单的的用法，直接使用propertyName作为数据库中字段的名称。</li><li><code>WCDB_SYNTHESIZE_COLUMN(className, propertyName, columnName)</code>支持自定义字段名。</li><li><code>WCDB_SYNTHESIZE_DEFAULT(className, propertyName, defaultValue)</code>自定义字段默认值（可以是任意C类型或NSString, NSData, NSNumber, NSNull）。</li><li><code>WCDB_SYNTHESIZE_COLUMN_DEFAULT(className, propertyName, cloumnName, defaultValue)</code>。</li></ul><p><a href="https://github.com/Tencent/wcdb/blob/master/objc/sample/orm/WCTSampleORM.mm" target="_blank" rel="noopener">字段宏参考</a></p><h4 id="索引宏"><a href="#索引宏" class="headerlink" title="索引宏"></a>索引宏</h4><p>索引宏以WCDB_INDEX开头，定义了数据库的索引属性。支持定义索引的排序方式。</p><ul><li><code>WCDB_INDEX(className, indexSubfixName, propertyName)</code>是基础用法，直接指定某个字段为索引。同时，WCDB会将tableName + indexSubfixName作为该索引的名字。</li><li><code>WCDB_INDEX_ASC(className, indexSubfixName, propertyName)</code>升序。</li><li><code>WCDB_INDEX_DESC(className, indexSubfixName, propertyName)</code>降序。</li><li><code>WCDB_UNIQUE_INDEX(className, indexSubfixName, propertyName)</code>唯一索引。</li><li><code>WCDB_UNIQUE_INDEX_ASC(className, indexSubfixName, propertyName)</code>唯一索引升序排列。</li><li><code>WCDB_UNIQUE_INDEX_DESC(className, indexSubfixName, propertyName)</code>唯一索引降序排列。</li></ul><p>WCDB通过<code>indexSubfixName</code>匹配多索引。相同的<code>indexSubfixName</code>会被组合为多字段索引。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WCDB_INDEX(WCTSampleORMIndex, &quot;_multiIndexSubfix&quot;, multiIndexPart1)</span><br><span class="line">WCDB_INDEX(WCTSampleORMIndex, &quot;_multiIndexSubfix&quot;, multiIndexPart2)</span><br></pre></td></tr></table></figure><p><a href="https://github.com/Tencent/wcdb/blob/master/objc/sample/orm/WCTSampleORMIndex.mm" target="_blank" rel="noopener">索引宏例子</a></p><h4 id="约束宏"><a href="#约束宏" class="headerlink" title="约束宏"></a>约束宏</h4><p>约束宏包含了<strong>字段约束</strong>和<strong>表约束</strong>。</p><h5 id="字段约束"><a href="#字段约束" class="headerlink" title="字段约束"></a>字段约束</h5><p>主键约束以WCDB_PRIMARY开头，定义了数据库的主键；支持自定义主键的排序方式、是否自增。</p><ul><li><code>WCDB_PRIMARY(className, propertyName)</code>是基础用法，直接使用propertyName作为数据库的主键。</li><li><code>WCDB_PRIMARY_ASC(className, propertyName)</code>主键升序。</li><li><code>WCDB_PRIMARY_DESC(className, propertyName)</code>主键降序。</li><li><code>WCDB_PRIMARY_AUTO_INCREMENT(className, propertyName)</code>主键自增。</li><li><code>WCDB_PRIMARY_ASC_AUTO_INCREMENT(className, propertyName)</code>主键自增及升序的组合。</li><li><code>WCDB_PRIMARY_DESC_AUTO_INCREMENT(className, propertyName)</code>主键自增及降序组合。</li></ul><p>非空约束：<code>WCDB_NOT_NULL(className, propertyName)</code>，当该字段插入数据为空时，数据库会返回错误。<br>唯一约束：<code>WCDB_UNIQUE(className, propertyName)</code>，当该字段插入数据与其他列冲突时，数据库会返回错误。</p><p><strong>注意：</strong>使用了主键自增后，创建的模型必须设置<code>isAutoIncrement</code>为YES。</p><h5 id="表约束"><a href="#表约束" class="headerlink" title="表约束"></a>表约束</h5><p>多主键约束以<code>WCDB_MULTI_PRIMARY</code>开头，定义了数据库的多主键，支持自定义每个主键的排序方式。</p><ul><li><code>WCDB_MULTI_PRIMARY(className, constraintName, propertyName)</code>为基础用法，多个主键通过constrainName匹配。</li><li><code>WCDB_MULTI_PRIMARY_ASC(className, constraintName, propertyName)</code>多主键升序。</li><li><code>WCDB_MULTI_PRIMARY_DESC(className, constraintName, propertyName)</code>多主键降序。</li></ul><p>多字段唯一约束以<code>WCDB_MULTI_UNIQUE</code>开头，定义了数据库的多字段组合唯一，支持自定义每个字段的排序方式。</p><ul><li><code>WCDB_MULTI_UNIQUE(className, constraintName, propertyName)</code>基础用法。</li><li><code>WCDB_MULTI_UNIQUE_ASC(className, constraintName, propertyName)</code>升序。</li><li><code>WCDB_MULTI_UNIQUE_DESC(className, constraintName, propertyName)</code>降序。</li></ul><p><a href="https://github.com/Tencent/wcdb/blob/master/objc/sample/orm/WCTSampleORMTableConstraint.mm" target="_blank" rel="noopener">表约束示例</a></p><h4 id="修改字段"><a href="#修改字段" class="headerlink" title="修改字段"></a>修改字段</h4><p>由于SQLite只支持增加字段，并不支持删除和重命名字段。因此，WCDB在删除字段的时候只是将其定义删除；删除定义后，WCDB只是将该字段忽略，其旧数据依然在数据库中，但新增的数据基本<strong>不会因为该字段产生额外的性能和空间损耗</strong>。<br>由于SQLite不支持修改字段名称，所以WCDB采用重新映射的方式。</p><h3 id="CRUD"><a href="#CRUD" class="headerlink" title="CRUD"></a>CRUD</h3><p>WCDB提供了三个基础类进行数据库操作：<code>WCTDatabase</code>、<code>WCTTable</code>、<code>WCTTransaction</code>。它们的接口都是<strong>线程安全的</strong>。</p><h4 id="WCTDatabase"><a href="#WCTDatabase" class="headerlink" title="WCTDatabase"></a>WCTDatabase</h4><p>表示一个数据库，可以进行所有的数据库操作。</p><h5 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h5><p><code>WCTDatabase</code>通过<code>initWithPath:</code>接口进行创建。该接口会同时创建path中不存在的目录。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span>* path = <span class="string">@"&lt;这里是数据库路径&gt;"</span>;</span><br><span class="line">WCTDatabase *database = [[WCTDatabase alloc] initWithPath:path];</span><br></pre></td></tr></table></figure><h5 id="打开数据库"><a href="#打开数据库" class="headerlink" title="打开数据库"></a>打开数据库</h5><p>WCDB采用懒加载的方式管理对象，因此SQLite连接会在第一次被访问的时候打开。开发者<strong>不需要手动打开数据库</strong>。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断数据库是否能够打开</span></span><br><span class="line"><span class="keyword">if</span> ([database canOpen]) &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断数据库是否已经打开</span></span><br><span class="line"><span class="keyword">if</span> ([database isOpened]) &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="关闭数据库"><a href="#关闭数据库" class="headerlink" title="关闭数据库"></a>关闭数据库</h5><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[database close];</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>由于WCDB支持多线程访问数据库，因此，该接口会阻塞等待所有线程均已操作结束。</p><p>对于一个特定路径的数据库，WCDB会在所有对象对其的引用结束时，自动关闭数据库，并且回收内存和SQLite连接。因此，大多数的时候，开发者并<strong>不需要手动关闭数据库</strong>。</p><h4 id="WCTTable"><a href="#WCTTable" class="headerlink" title="WCTTable"></a>WCTTable</h4><p>表示一个表。等价于预设了<code>class</code>和<code>tableName</code>的<code>WCTDatabase</code>，仅可以进行数据库的CRUD。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WCTTable* table = [database getTableOfName:tableName</span><br><span class="line">                                 withClass:WCTSampleTable.class];</span><br></pre></td></tr></table></figure><h4 id="WCTTransaction"><a href="#WCTTransaction" class="headerlink" title="WCTTransaction"></a>WCTTransaction</h4><p>表示一个事务。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WCTTransaction *transaction = [database getTransaction];</span><br></pre></td></tr></table></figure><p>与WCTDatabase的事务不同，WCTTransaction可以在函数和对象之间传递，实现跨线程的事务。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//You can do a transaction in different threads using WCTTransaction.</span></span><br><span class="line"><span class="comment">//But it's better to run serially, or an inner thread mutex will guarantee this.</span></span><br><span class="line"><span class="built_in">BOOL</span> ret = [transaction begin];</span><br><span class="line"><span class="built_in">dispatch_async</span>(dispatch_queue_create(<span class="string">"other thread"</span>, DISPATCH_QUEUE_SERIAL), ^&#123;</span><br><span class="line">  WCTSampleTransaction *object = [[WCTSampleTransaction alloc] init];</span><br><span class="line">  <span class="built_in">BOOL</span> ret = [transaction insertObject:object</span><br><span class="line">                                  into:tableName];</span><br><span class="line">  <span class="keyword">if</span> (ret) &#123;</span><br><span class="line">      [transaction commit];</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      [transaction rollback];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="CRUD操作"><a href="#CRUD操作" class="headerlink" title="CRUD操作"></a>CRUD操作</h4><h5 id="创建数据库-1"><a href="#创建数据库-1" class="headerlink" title="创建数据库"></a>创建数据库</h5><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">BOOL</span> ret = [database createTableAndIndexesOfName:tableName</span><br><span class="line">                                       withClass:WCTSampleTable.class];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">BOOL</span> ret = [database createTableOfName:tableName</span><br><span class="line">                     withColumnDefList:&#123;</span><br><span class="line">                     WCTSampleTable.intValue.def(WCTColumnTypeInteger32),</span><br><span class="line">                     WCTSampleTable.stringValue.def(WCTColumnTypeString)</span><br><span class="line">           &#125;];</span><br></pre></td></tr></table></figure><h5 id="将数据插入表"><a href="#将数据插入表" class="headerlink" title="将数据插入表"></a>将数据插入表</h5><ul><li><code>insertObject:into:和insertObjects:into:</code>，插入单个或多个对象</li><li><code>insertOrReplaceObject:into</code>和<code>insertOrReplaceObjects:into</code>，插入单个或多个对象。当对象的主键在数据库内已经存在时，更新数据；否则插入对象。</li><li><code>insertObject:onProperties:into:</code>和<code>insertObjects:onProperties:into:</code>，插入单个或多个对象的部分属性</li><li><code>insertOrReplaceObject:onProperties:into</code>和<code>insertOrReplaceObjects:onProperties:into</code>，插入单个或多个对象的部分属性。当对象的主键在数据库内已经存在时，更新数据；否则插入对象。</li></ul><h5 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h5><ul><li><code>deleteAllObjectsFromTable:</code>删除表内的所有数据</li><li><code>deleteObjectsFromTable:</code>后可组合接 where、orderBy、limit、offset以删除部分数据</li></ul><h5 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h5><ul><li><code>updateAllRowsInTable:onProperties:withObject:</code>，通过object更新数据库中所有指定列的数据</li><li><code>updateRowsInTable:onProperties:withObject:</code>后可组合接 where、orderBy、limit、offset以通过object更新指定列的部分数据</li><li><code>updateAllRowsInTable:onProperty:withObject:</code>，通过object更新数据库某一列的数据</li><li><code>updateRowsInTable:onProperty:withObject:</code>后可组合接 where、orderBy、limit、offset以通过object更新某一列的部分数据</li><li><code>updateAllRowsInTable:onProperties:withRow:</code>，通过数组更新数据库中的所有指定列的数据</li><li><code>updateRowsInTable:onProperties:withRow:</code>后可组合接 where、orderBy、limit、offset以通过数组更新指定列的部分数据</li><li><code>updateAllRowsInTable:onProperty:withRow:</code>，通过数组更新数据库某一列的数据</li><li><code>updateRowsInTable:onProperty:withRow:</code>后可组合接 where、orderBy、limit、offset以通过数组更新某一列的部分数</li></ul><h5 id="查找数据"><a href="#查找数据" class="headerlink" title="查找数据"></a>查找数据</h5><ul><li><code>getOneObjectOfClass:fromTable:</code>后可接 where、orderBy、limit、offset以从数据库中取出一行数据并组合成object</li><li><code>getOneObjectOnResults:fromTable:</code>后可接 where、orderBy、limit、offset以从数据库中取出一行数据的部分列并组合成object</li><li><code>getOneRowOnResults:fromTable:</code>后可接 where、orderBy、limit、offset以从数据库中取出一行数据的部分列并组合成数组</li><li><code>getOneColumnOnResult:fromTable:</code>后可接 where、orderBy、limit、offset以从数据库中取出一列数据并组合成数组</li><li><code>getOneDistinctColumnOnResult:fromTable:</code>后可接 where、orderBy、limit、offset以从数据库中取出一列数据，并取distinct后组合成数组。</li><li><code>getOneValueOnResult:fromTable:</code>后可接 where、orderBy、limit、offset以从数据库中取出一行数据的某一列</li><li><code>getAllObjectsOfClass:fromTable:</code>，取出所有数据，并组合成object</li><li><code>getObjectsOfClass:fromTable:</code>后可接 where、orderBy、limit、offset以从数据库中取出一部分数据，并组合成object</li><li><code>getAllObjectsOnResults:fromTable:</code>，取出所有数据的指定列，并组合成object</li><li><code>getObjectsOnResults:fromTable:</code>后可接where、orderBy、limit、offset以从数据库中取出一部分数据的指定列，并组合成object</li><li><code>getAllRowsOnResults:fromTable:</code>，取出所有数据的指定列，并组合成数组</li><li><code>getRowsOnResults:fromTable:</code>后可接where、orderBy、limit、offset以从数据库中取出一部分数据的指定列，并组合成数组</li></ul><p><a href="https://github.com/Tencent/wcdb/blob/master/objc/sample/convenient/sample_convenient_main.mm" target="_blank" rel="noopener">CRUD示例</a></p><h5 id="链式接口"><a href="#链式接口" class="headerlink" title="链式接口"></a>链式接口</h5><p>WCDB对于增删改查操作，都提供了对应的类以实现链式调用</p><ul><li>WCTInsert</li><li>WCTDelete</li><li>WCTUpdate</li><li>WCTSelect</li><li>WCTRowSelect</li><li>WCTMultiSelect</li></ul><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">WCTSelect *select = [database prepareSelectObjectsOnResults:Message.localID.max()</span><br><span class="line">                                                  fromTable:<span class="string">@"message"</span>];</span><br><span class="line"><span class="built_in">NSArray</span>&lt;Message *&gt; *objects = [[[[select where:Message.localID &gt; <span class="number">0</span>] </span><br><span class="line">                               groupBy:&#123;Message.content&#125;]</span><br><span class="line">                                    orderBy:Message.createTime.order()] </span><br><span class="line">                                     limit:<span class="number">10</span>].allObjects;</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h4><h4 id="调试SQL"><a href="#调试SQL" class="headerlink" title="调试SQL"></a>调试SQL</h4><p>[WCTStatistics SetGlobalSQLTrace:]会监控所有执行的SQL，该接口可用于调试，确定SQL是否执行正确。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//SQL Execution Monitor</span></span><br><span class="line">[WCTStatistics SetGlobalSQLTrace:^(<span class="built_in">NSString</span> *sql) &#123;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"SQL: %@"</span>, sql);</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><h4 id="WINQ"><a href="#WINQ" class="headerlink" title="WINQ"></a>WINQ</h4><h4 id="自定义类型"><a href="#自定义类型" class="headerlink" title="自定义类型"></a>自定义类型</h4><h4 id="隔离C-代码"><a href="#隔离C-代码" class="headerlink" title="隔离C++代码"></a>隔离C++代码</h4><h4 id="关于数据库加密"><a href="#关于数据库加密" class="headerlink" title="关于数据库加密"></a>关于数据库加密</h4><h4 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h4><h5 id="主键自增-Auto-Increment"><a href="#主键自增-Auto-Increment" class="headerlink" title="主键自增(Auto Increment)"></a>主键自增(Auto Increment)</h5><h5 id="as重定向"><a href="#as重定向" class="headerlink" title="as重定向"></a>as重定向</h5><h5 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h5><h4 id="基础类共享"><a href="#基础类共享" class="headerlink" title="基础类共享"></a>基础类共享</h4><p>对于同一个路径的数据库，不同的<code>WCTDatabase</code>、<code>WCTTable</code>、<code>WCTTransaction</code>对象共享同一个WCDB核心。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WCTDatabase* database1 = [[WCTDatabase alloc] initWithPath:path];</span><br><span class="line">WCTDatabase* database2 = [[WCTDatabase alloc] initWithPath:path];</span><br><span class="line">database1.tag = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%d"</span>, database2.tag);<span class="comment">//print 1</span></span><br></pre></td></tr></table></figure><h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><p>WCDB提供了删除数据库、移动数据库、获取数据库占用空间和使用路径的文件操作接口。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)removeFilesWithError:(WCTError **)error;</span><br><span class="line">- (<span class="built_in">BOOL</span>)moveFilesToDirectory:(<span class="built_in">NSString</span> *)directory withExtraFiles:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)extraFiles andError:(WCTError **)error;</span><br><span class="line">- (<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)getPaths;</span><br><span class="line">- (<span class="built_in">NSUInteger</span>)getFilesSizeWithError:(WCTError **)error;</span><br></pre></td></tr></table></figure><p>若是一个线程正在操作数据库，而另一个线程进行移动数据库的操作，可能会导致数据库的损坏；因此，文件操作通常放在关闭数据库后。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[database close:^&#123;</span><br><span class="line">  WCTError *error = <span class="literal">nil</span>;</span><br><span class="line">  <span class="built_in">BOOL</span> ret = [database moveFilesToDirectory:otherDirectory withError:&amp;error];</span><br><span class="line">  <span class="keyword">if</span> (!ret) &#123;</span><br><span class="line">      <span class="built_in">NSLog</span>(<span class="string">@"Move files Error %@"</span>, error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;公司的项目所使用的数据库是FMDB，并对其进行了二次封装；由于年久失修，遂决定改为WCDB，因此，抽时间对WCDB进行了一番研究。&lt;br&gt;&lt;a href=&quot;https://github.com/Tencent/wcdb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WCDB&lt;/a&gt;是腾讯开源的一款供客户端使用的数据库，基于&lt;a href=&quot;https://github.com/sqlcipher/sqlcipher&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SQLCipher&lt;/a&gt;，支持iOS，macOS和Android。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>jenkins执行GitHub中的Python代码</title>
    <link href="http://yoursite.com/2019/08/13/jenkins%E6%89%A7%E8%A1%8CGitHub%E4%B8%AD%E7%9A%84Python%E4%BB%A3%E7%A0%81/"/>
    <id>http://yoursite.com/2019/08/13/jenkins执行GitHub中的Python代码/</id>
    <published>2019-08-13T09:01:43.000Z</published>
    <updated>2024-02-18T09:27:10.626Z</updated>
    
    <content type="html"><![CDATA[<p>jenkins是很好用的一个自动化测试和执行代码的工具，<a href="https://sheldon.top/2019/08/12/jenkins%E6%89%93%E5%8C%85%E6%B5%81%E7%A8%8B/" target="_blank" rel="noopener">查看如何安装jenkins</a>;</p><p>我们的代码是存储在代码仓库里面的，一般，我们使用GitHub来存放我们的代码；</p><p>那么，怎么使用jenkins来直接执行我们存放在GitHub中的代码呢？</p><a id="more"></a><h2 id="jenkins-创建一个任务"><a href="#jenkins-创建一个任务" class="headerlink" title="jenkins 创建一个任务"></a>jenkins 创建一个任务</h2><p><img src="https://s2.ax1x.com/2019/08/13/mCdKhR.jpg" alt="jenkins创建任务"></p><h2 id="配置jenkins"><a href="#配置jenkins" class="headerlink" title="配置jenkins"></a>配置jenkins</h2><h3 id="选择GitHub项目"><a href="#选择GitHub项目" class="headerlink" title="选择GitHub项目"></a>选择GitHub项目</h3><p><img src="https://s2.ax1x.com/2019/08/13/mC0QOK.jpg" alt="填写项目地址"></p><h3 id="填写源码管理"><a href="#填写源码管理" class="headerlink" title="填写源码管理"></a>填写源码管理</h3><p><img src="https://s2.ax1x.com/2019/08/13/mCBfCd.jpg" alt="源码管理"></p><p>如果没有凭证，就点击Credentials右边的<strong>添加</strong><br><img src="https://s2.ax1x.com/2019/08/13/mCrrTO.jpg" alt="添加凭证"><br><strong>注意：</strong>这里添加的是SSH的私钥</p><h4 id="如何查询自己的ssh密钥？"><a href="#如何查询自己的ssh密钥？" class="headerlink" title="如何查询自己的ssh密钥？"></a>如何查询自己的ssh密钥？</h4><ol><li><p>进入ssh文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br></pre></td></tr></table></figure></li><li><p>查看私钥文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa</span><br></pre></td></tr></table></figure></li></ol><h3 id="定时构建（可选）"><a href="#定时构建（可选）" class="headerlink" title="定时构建（可选）"></a>定时构建（可选）</h3><p><img src="https://s2.ax1x.com/2019/08/13/mCspAU.jpg" alt="定时构建"></p><h3 id="每次构建之前清空一下Jenkins工作空间，避免拉取的代码有冲突"><a href="#每次构建之前清空一下Jenkins工作空间，避免拉取的代码有冲突" class="headerlink" title="每次构建之前清空一下Jenkins工作空间，避免拉取的代码有冲突"></a>每次构建之前清空一下Jenkins工作空间，避免拉取的代码有冲突</h3><p><img src="https://s2.ax1x.com/2019/08/13/mCswCQ.jpg" alt="清空工作空间"></p><h3 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h3><p>在构建选项中选择<strong>增加构建步骤-&gt;Execute shell</strong>;</p><p>然后填写需要执行的脚本：<br><img src="https://s2.ax1x.com/2019/08/13/mCyGRJ.jpg" alt="执行脚本"></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>点击保存，然后就可以build我的项目啦！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jenkins是很好用的一个自动化测试和执行代码的工具，&lt;a href=&quot;https://sheldon.top/2019/08/12/jenkins%E6%89%93%E5%8C%85%E6%B5%81%E7%A8%8B/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;查看如何安装jenkins&lt;/a&gt;;&lt;/p&gt;
&lt;p&gt;我们的代码是存储在代码仓库里面的，一般，我们使用GitHub来存放我们的代码；&lt;/p&gt;
&lt;p&gt;那么，怎么使用jenkins来直接执行我们存放在GitHub中的代码呢？&lt;/p&gt;
    
    </summary>
    
      <category term="jenkins" scheme="http://yoursite.com/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="http://yoursite.com/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>git本地库连接远端库</title>
    <link href="http://yoursite.com/2019/08/13/git%E6%9C%AC%E5%9C%B0%E5%BA%93%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%AB%AF%E5%BA%93/"/>
    <id>http://yoursite.com/2019/08/13/git本地库连接远端库/</id>
    <published>2019-08-13T06:55:27.000Z</published>
    <updated>2024-02-18T09:27:10.623Z</updated>
    
    <content type="html"><![CDATA[<p>我们使用git有时候会有这种情况：<br>我们只在本地创建了git仓库，并没有在GitHub上创建远端仓库；当我们在本的的git仓库提交了几次修改后，想要将此git仓库放在GitHub，那么我们需要怎么做呢？<br><a id="more"></a></p><h2 id="连接远程仓库"><a href="#连接远程仓库" class="headerlink" title="连接远程仓库"></a>连接远程仓库</h2><p>假设我们已经在GitHub上创建了一个空的仓库</p><p>先cd到我们本地git仓库所在的目录,然后执行git连接操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:FlameTinary/TYPythonTools.git</span><br></pre></td></tr></table></figure><h2 id="错误步骤"><a href="#错误步骤" class="headerlink" title="错误步骤"></a>错误步骤</h2><p>然后执行<code>git pull</code>，会发现，报错了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">warning: no common commits</span><br><span class="line">remote: Enumerating objects: 4, done.</span><br><span class="line">remote: Counting objects: 100% (4/4), done.</span><br><span class="line">remote: Compressing objects: 100% (4/4), done.</span><br><span class="line">Unpacking objects: 100% (4/4), done.</span><br><span class="line">remote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">From github.com:FlameTinary/TYPythonTools</span><br><span class="line"> * [new branch]      master     -&gt; origin/master</span><br><span class="line">There is no tracking information for the current branch.</span><br><span class="line">Please specify which branch you want to merge with.</span><br><span class="line">See git-pull(1) for details.</span><br><span class="line"></span><br><span class="line">    git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line">If you wish to set tracking information for this branch you can do so with:</span><br><span class="line"></span><br><span class="line">    git branch --set-upstream-to=origin/&lt;branch&gt; master</span><br><span class="line"></span><br><span class="line"> ✘ sheldon@tianyudeMacBook-Pro  ~/Documents/TYPythonTools   master  git pull remote master</span><br><span class="line">fatal: &apos;remote&apos; does not appear to be a git repository</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure><p>执行<code>git pull origin master --allow-unrelated-histories</code>也不行；</p><p>那么怎么办呢？</p><h2 id="正确步骤"><a href="#正确步骤" class="headerlink" title="正确步骤"></a>正确步骤</h2><p>原来是我们本的的branch和远端的branch无法对应起来；</p><p>可以执行<code>git branch --set-upstream-to=origin/master master</code>，会出现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Branch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;origin&apos;.</span><br></pre></td></tr></table></figure><p>然后我们再执行<code>git pull origin master --allow-unrelated-histories</code>；</p><p>最后将本地内容推送到远端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>大功告成！！</p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><h3 id="1-连接远端仓库"><a href="#1-连接远端仓库" class="headerlink" title="1. 连接远端仓库"></a>1. 连接远端仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:FlameTinary/TYPythonTools.git</span><br></pre></td></tr></table></figure><h3 id="2-连接分支"><a href="#2-连接分支" class="headerlink" title="2. 连接分支"></a>2. 连接分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream-to=origin/master master</span><br></pre></td></tr></table></figure><h3 id="3-拉取远端代码"><a href="#3-拉取远端代码" class="headerlink" title="3. 拉取远端代码"></a>3. 拉取远端代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master --allow-unrelated-histories</span><br></pre></td></tr></table></figure><h3 id="4-推送本地代码到远端"><a href="#4-推送本地代码到远端" class="headerlink" title="4. 推送本地代码到远端"></a>4. 推送本地代码到远端</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们使用git有时候会有这种情况：&lt;br&gt;我们只在本地创建了git仓库，并没有在GitHub上创建远端仓库；当我们在本的的git仓库提交了几次修改后，想要将此git仓库放在GitHub，那么我们需要怎么做呢？&lt;br&gt;
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>解决jenkins在装有anaconda环境的机器上执行Python文件，Python环境错误的问题</title>
    <link href="http://yoursite.com/2019/08/13/%E8%A7%A3%E5%86%B3jenkins%E5%9C%A8%E8%A3%85%E6%9C%89anaconda%E7%8E%AF%E5%A2%83%E7%9A%84%E6%9C%BA%E5%99%A8%E4%B8%8A%E6%89%A7%E8%A1%8CPython%E6%96%87%E4%BB%B6%EF%BC%8CPython%E7%8E%AF%E5%A2%83%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/08/13/解决jenkins在装有anaconda环境的机器上执行Python文件，Python环境错误的问题/</id>
    <published>2019-08-13T03:12:50.000Z</published>
    <updated>2024-02-18T09:27:10.626Z</updated>
    
    <content type="html"><![CDATA[<p>使用jenkins定时执行某些任务或者执行测试是很方便的一个工作，但是有些时候如果碰到一些环境或者冲突方面的问题也是比较头疼的。<br><a id="more"></a></p><p>python分为2.7和3.0以上两个大版本，所以一些朋友的电脑中会同时存在这两种版本。由于我的电脑是MacBook pro， 所以系统中自动安装的2.7的版本。</p><p>但我需要使用3.7的版本作为主要开发，且系统中的2.7版本也不能删除，因为系统的一些功能需要依赖2.7的版本。</p><p>所以，在经过双版本的折腾后，还是选择了Anaconda的怀抱。</p><p>以前一直使用Jenkins自动执行iOS程序，最近写了一个Python的工具，需要定时执行，所以也是用Jenkins来操作；但是，问题来了，在Jenkins中的<code>Execute shell</code>中直接写了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python <span class="string">"文件路径"</span></span><br></pre></td></tr></table></figure><p>这样却报错了…</p><p><img src="https://s2.ax1x.com/2019/08/13/m9JIQe.jpg" alt="jenkins错误"></p><p>可是明明在Terminal中执行没有问题啊！！</p><p>第一次猜测可能是Jenkins找不到python的路径，所以在Jenkins -&gt; Manage Jenkins -&gt; Configure System -&gt; 全局属性 -&gt; Environment variables -&gt; 中添加了Python的路径，然并卵！</p><p><img src="https://s2.ax1x.com/2019/08/13/m9JxSS.jpg" alt="配置python在jenkins中的路径"></p><p>继续折腾，既然找不到包，那么我就把包放在工程文件所在的路径中，最后还是找不到!</p><p>最后直接使用python绝对路径执行文件</p><p><img src="https://s2.ax1x.com/2019/08/13/m9YAYV.jpg" alt="路径执行python"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/anaconda3/bin/python ~/Documents/TYPythonTools/TYChartRobot.py</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用jenkins定时执行某些任务或者执行测试是很方便的一个工作，但是有些时候如果碰到一些环境或者冲突方面的问题也是比较头疼的。&lt;br&gt;
    
    </summary>
    
      <category term="jenkins" scheme="http://yoursite.com/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="http://yoursite.com/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Command Line Tools 使用</title>
    <link href="http://yoursite.com/2019/08/12/Command-Line-Tools-%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/08/12/Command-Line-Tools-使用/</id>
    <published>2019-08-12T07:31:06.000Z</published>
    <updated>2024-02-18T09:27:10.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><h3 id="查看目前我使用的工具XCODE版本"><a href="#查看目前我使用的工具XCODE版本" class="headerlink" title="查看目前我使用的工具XCODE版本"></a>查看目前我使用的工具XCODE版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># command</span></span><br><span class="line">xcode-select --<span class="built_in">print</span>-path</span><br><span class="line"></span><br><span class="line"><span class="comment"># print</span></span><br><span class="line">/Applications/Xcode.app/Contents/Developer</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="选择XCODE中的默认版本用于我的命令行工具"><a href="#选择XCODE中的默认版本用于我的命令行工具" class="headerlink" title="选择XCODE中的默认版本用于我的命令行工具"></a>选择XCODE中的默认版本用于我的命令行工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># command</span></span><br><span class="line">sudo xcode-select -switch &lt;path/to/&gt;Xcode.app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释</span></span><br><span class="line">`&lt;path/to/&gt;`是路径要使用的开发Xcode.app包</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例</span></span><br><span class="line">sudo xcode-select -switch /Applications/Xcode5.1.1/Xcode.app</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><code>xcodebuild</code>是一个命令行工具，可以让你的工程通过<code>projects</code>、<code>workspaces</code>进行编译、测试、分析、打包。它可以运行在包含一个或多个Target的工程上面，或者在<code>projects</code> 、<code>workspaces</code>包含<code>scheme</code>上面。</p><h3 id="列出所有的Target"><a href="#列出所有的Target" class="headerlink" title="列出所有的Target"></a>列出所有的Target</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># command</span></span><br><span class="line">xcodebuild -list -project &lt;your project name&gt;.xcodeproj</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释</span></span><br><span class="line">`&lt;your project name&gt;`是你工程的名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">xcodebuild -list -project TYDemos.xcodeproj</span><br><span class="line"></span><br><span class="line"><span class="comment"># print </span></span><br><span class="line">Information about project <span class="string">"TYDemos"</span>:</span><br><span class="line">    Targets:</span><br><span class="line">        TYDemos</span><br><span class="line">        qwer</span><br><span class="line"></span><br><span class="line">    Build Configurations:</span><br><span class="line">        Debug</span><br><span class="line">        Release</span><br><span class="line"></span><br><span class="line">    If no build configuration is specified and -scheme is not passed <span class="keyword">then</span> <span class="string">"Release"</span> is used.</span><br><span class="line"></span><br><span class="line">    Schemes:</span><br><span class="line">        qwer</span><br><span class="line">        TYDemos</span><br></pre></td></tr></table></figure><h3 id="编译你工程的配置和schemes"><a href="#编译你工程的配置和schemes" class="headerlink" title="编译你工程的配置和schemes"></a>编译你工程的配置和schemes</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># command</span></span><br><span class="line">xcodebuild -scheme &lt;your scheme name&gt; build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释</span></span><br><span class="line">`&lt;your scheme name&gt;`是你选择特定的编译和执行的一个scheme</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">xocdebuild -scheme TYGameSceneDemo build</span><br><span class="line"></span><br><span class="line"><span class="comment"># print</span></span><br><span class="line">note: Using new build system</span><br><span class="line">note: Planning build</span><br><span class="line">2019-06-13 11:23:50.516 xcodebuild[61408:7436815]  DTDeviceKit: deviceType from 00008006-000F29961AC1002E was NULL</span><br><span class="line">2019-06-13 11:23:50.516 xcodebuild[61408:7436815]  DTDeviceKit: deviceType from 00008006-000F29961AC1002E was NULL</span><br><span class="line">2019-06-13 11:23:50.516 xcodebuild[61408:7436815]  iPhoneSupport: 📱&lt;DVTiOSDevice (0x7ff824b6d8b0), Sheldon’s iPhone 7plus, iPhone, 12.2 (16E227), 312a7baecea95257c11a5eb61d1203138faac05c&gt; unable to mount DeveloperDiskImage (Error Domain=com.apple.dtdevicekit Code=601 <span class="string">"Could not find platform"</span> UserInfo=&#123;NSLocalizedDescription=Could not find platform&#125;)</span><br><span class="line">note: Constructing build description</span><br><span class="line">CreateBuildDirectory /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">builtin</span>-create-build-directory /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products</span><br><span class="line"></span><br><span class="line">CreateBuildDirectory /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">builtin</span>-create-build-directory /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex</span><br><span class="line"></span><br><span class="line">MkDir /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    /bin/mkdir -p /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app</span><br><span class="line"></span><br><span class="line">ProcessProductPackaging /Users/sheldon/Library/MobileDevice/Provisioning\ Profiles/e91c7402-e02a-45ac-aff3-c73c563abcfb.mobileprovision /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app/embedded.mobileprovision (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">builtin</span>-productPackagingUtility /Users/sheldon/Library/MobileDevice/Provisioning\ Profiles/e91c7402-e02a-45ac-aff3-c73c563abcfb.mobileprovision -o /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app/embedded.mobileprovision</span><br><span class="line"></span><br><span class="line">WriteAuxiliaryFile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/DerivedSources/Entitlements.plist (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    write-file /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/DerivedSources/Entitlements.plist</span><br><span class="line"></span><br><span class="line">ProcessProductPackaging <span class="string">""</span> /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo.app.xcent (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Entitlements:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"application-identifier"</span> = <span class="string">"CC9XV3GRSV.top.sheldon.TYGameSceneDemo"</span>;</span><br><span class="line">    <span class="string">"com.apple.developer.team-identifier"</span> = CC9XV3GRSV;</span><br><span class="line">    <span class="string">"get-task-allow"</span> = 1;</span><br><span class="line">    <span class="string">"keychain-access-groups"</span> =     (</span><br><span class="line">        <span class="string">"CC9XV3GRSV.top.sheldon.TYGameSceneDemo"</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">builtin</span>-productPackagingUtility -entitlements -format xml -o /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo.app.xcent</span><br><span class="line"></span><br><span class="line">WriteAuxiliaryFile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/all-product-headers.yaml (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    write-file /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/all-product-headers.yaml</span><br><span class="line"></span><br><span class="line">WriteAuxiliaryFile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo.hmap (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    write-file /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo.hmap</span><br><span class="line"></span><br><span class="line">WriteAuxiliaryFile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-project-headers.hmap (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    write-file /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-project-headers.hmap</span><br><span class="line"></span><br><span class="line">WriteAuxiliaryFile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-own-target-headers.hmap (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    write-file /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-own-target-headers.hmap</span><br><span class="line"></span><br><span class="line">WriteAuxiliaryFile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-generated-files.hmap (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    write-file /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-generated-files.hmap</span><br><span class="line"></span><br><span class="line">WriteAuxiliaryFile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-all-non-framework-target-headers.hmap (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    write-file /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-all-non-framework-target-headers.hmap</span><br><span class="line"></span><br><span class="line">WriteAuxiliaryFile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-all-target-headers.hmap (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    write-file /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-all-target-headers.hmap</span><br><span class="line"></span><br><span class="line">CompileC /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/GameViewController.o /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/GameViewController.m normal arm64 objective-c com.apple.compilers.llvm.clang.1_0.compiler (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">export</span> LANG=en_US.US-ASCII</span><br><span class="line">    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -x objective-c -arch arm64 -fmessage-length=178 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit=0 -fcolor-diagnostics -std=gnu11 -fobjc-arc -fobjc-weak -fmodules -gmodules -fmodules-cache-path=/Users/sheldon/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -fmodules-prune-interval=86400 -fmodules-prune-after=345600 -fbuild-session-file=/Users/sheldon/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -fmodules-validate-once-per-build-session -Wnon-modular-include-in-framework-module -Werror=non-modular-include-in-framework-module -Wno-trigraphs -fpascal-strings -O0 -fno-common -Wno-missing-field-initializers -Wno-missing-prototypes -Werror=<span class="built_in">return</span>-type -Wdocumentation -Wunreachable-code -Wno-implicit-atomic-properties -Werror=deprecated-objc-isa-usage -Wno-objc-interface-ivars -Werror=objc-root-class -Wno-arc-repeated-use-of-weak -Wimplicit-retain-self -Wduplicate-method-match -Wno-missing-braces -Wparentheses -Wswitch -Wunused-function -Wno-unused-label -Wno-unused-parameter -Wunused-variable -Wunused-value -Wempty-body -Wuninitialized -Wconditional-uninitialized -Wno-unknown-pragmas -Wno-shadow -Wno-four-char-constants -Wno-conversion -Wconstant-conversion -Wint-conversion -Wbool-conversion -Wenum-conversion -Wno-float-conversion -Wnon-literal-null-conversion -Wobjc-literal-conversion -Wshorten-64-to-32 -Wpointer-sign -Wno-newline-eof -Wno-selector -Wno-strict-selector-match -Wundeclared-selector -Wdeprecated-implementations -DDEBUG=1 -DOBJC_OLD_DISPATCH_PROTOTYPES=0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.2.sdk -fstrict-aliasing -Wprotocol -Wdeprecated-declarations -miphoneos-version-min=12.2 -g -Wno-sign-conversion -Winfinite-recursion -Wcomma -Wblock-capture-autoreleasing -Wstrict-prototypes -Wno-semicolon-before-method-body -Wunguarded-availability -fembed-bitcode-marker -index-store-path /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Index/DataStore -iquote /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-generated-files.hmap -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-own-target-headers.hmap -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-all-target-headers.hmap -iquote /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-project-headers.hmap -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/include -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/DerivedSources-normal/arm64 -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/DerivedSources/arm64 -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/DerivedSources -F/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos -MMD -MT dependencies -MF /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/GameViewController.d --serialize-diagnostics /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/GameViewController.dia -c /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/GameViewController.m -o /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/GameViewController.o</span><br><span class="line"></span><br><span class="line">CompileC /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/AppDelegate.o /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/AppDelegate.m normal arm64 objective-c com.apple.compilers.llvm.clang.1_0.compiler (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">export</span> LANG=en_US.US-ASCII</span><br><span class="line">    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -x objective-c -arch arm64 -fmessage-length=178 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit=0 -fcolor-diagnostics -std=gnu11 -fobjc-arc -fobjc-weak -fmodules -gmodules -fmodules-cache-path=/Users/sheldon/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -fmodules-prune-interval=86400 -fmodules-prune-after=345600 -fbuild-session-file=/Users/sheldon/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -fmodules-validate-once-per-build-session -Wnon-modular-include-in-framework-module -Werror=non-modular-include-in-framework-module -Wno-trigraphs -fpascal-strings -O0 -fno-common -Wno-missing-field-initializers -Wno-missing-prototypes -Werror=<span class="built_in">return</span>-type -Wdocumentation -Wunreachable-code -Wno-implicit-atomic-properties -Werror=deprecated-objc-isa-usage -Wno-objc-interface-ivars -Werror=objc-root-class -Wno-arc-repeated-use-of-weak -Wimplicit-retain-self -Wduplicate-method-match -Wno-missing-braces -Wparentheses -Wswitch -Wunused-function -Wno-unused-label -Wno-unused-parameter -Wunused-variable -Wunused-value -Wempty-body -Wuninitialized -Wconditional-uninitialized -Wno-unknown-pragmas -Wno-shadow -Wno-four-char-constants -Wno-conversion -Wconstant-conversion -Wint-conversion -Wbool-conversion -Wenum-conversion -Wno-float-conversion -Wnon-literal-null-conversion -Wobjc-literal-conversion -Wshorten-64-to-32 -Wpointer-sign -Wno-newline-eof -Wno-selector -Wno-strict-selector-match -Wundeclared-selector -Wdeprecated-implementations -DDEBUG=1 -DOBJC_OLD_DISPATCH_PROTOTYPES=0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.2.sdk -fstrict-aliasing -Wprotocol -Wdeprecated-declarations -miphoneos-version-min=12.2 -g -Wno-sign-conversion -Winfinite-recursion -Wcomma -Wblock-capture-autoreleasing -Wstrict-prototypes -Wno-semicolon-before-method-body -Wunguarded-availability -fembed-bitcode-marker -index-store-path /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Index/DataStore -iquote /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-generated-files.hmap -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-own-target-headers.hmap -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-all-target-headers.hmap -iquote /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-project-headers.hmap -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/include -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/DerivedSources-normal/arm64 -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/DerivedSources/arm64 -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/DerivedSources -F/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos -MMD -MT dependencies -MF /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/AppDelegate.d --serialize-diagnostics /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/AppDelegate.dia -c /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/AppDelegate.m -o /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/AppDelegate.o</span><br><span class="line"></span><br><span class="line">WriteAuxiliaryFile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/TYGameSceneDemo.LinkFileList (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    write-file /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/TYGameSceneDemo.LinkFileList</span><br><span class="line"></span><br><span class="line">CompileC /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/main.o /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/main.m normal arm64 objective-c com.apple.compilers.llvm.clang.1_0.compiler (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">export</span> LANG=en_US.US-ASCII</span><br><span class="line">    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -x objective-c -arch arm64 -fmessage-length=178 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit=0 -fcolor-diagnostics -std=gnu11 -fobjc-arc -fobjc-weak -fmodules -gmodules -fmodules-cache-path=/Users/sheldon/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -fmodules-prune-interval=86400 -fmodules-prune-after=345600 -fbuild-session-file=/Users/sheldon/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -fmodules-validate-once-per-build-session -Wnon-modular-include-in-framework-module -Werror=non-modular-include-in-framework-module -Wno-trigraphs -fpascal-strings -O0 -fno-common -Wno-missing-field-initializers -Wno-missing-prototypes -Werror=<span class="built_in">return</span>-type -Wdocumentation -Wunreachable-code -Wno-implicit-atomic-properties -Werror=deprecated-objc-isa-usage -Wno-objc-interface-ivars -Werror=objc-root-class -Wno-arc-repeated-use-of-weak -Wimplicit-retain-self -Wduplicate-method-match -Wno-missing-braces -Wparentheses -Wswitch -Wunused-function -Wno-unused-label -Wno-unused-parameter -Wunused-variable -Wunused-value -Wempty-body -Wuninitialized -Wconditional-uninitialized -Wno-unknown-pragmas -Wno-shadow -Wno-four-char-constants -Wno-conversion -Wconstant-conversion -Wint-conversion -Wbool-conversion -Wenum-conversion -Wno-float-conversion -Wnon-literal-null-conversion -Wobjc-literal-conversion -Wshorten-64-to-32 -Wpointer-sign -Wno-newline-eof -Wno-selector -Wno-strict-selector-match -Wundeclared-selector -Wdeprecated-implementations -DDEBUG=1 -DOBJC_OLD_DISPATCH_PROTOTYPES=0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.2.sdk -fstrict-aliasing -Wprotocol -Wdeprecated-declarations -miphoneos-version-min=12.2 -g -Wno-sign-conversion -Winfinite-recursion -Wcomma -Wblock-capture-autoreleasing -Wstrict-prototypes -Wno-semicolon-before-method-body -Wunguarded-availability -fembed-bitcode-marker -index-store-path /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Index/DataStore -iquote /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-generated-files.hmap -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-own-target-headers.hmap -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-all-target-headers.hmap -iquote /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo-project-headers.hmap -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/include -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/DerivedSources-normal/arm64 -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/DerivedSources/arm64 -I/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/DerivedSources -F/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos -MMD -MT dependencies -MF /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/main.d --serialize-diagnostics /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/main.dia -c /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/main.m -o /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/main.o</span><br><span class="line"></span><br><span class="line">Ld /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app/TYGameSceneDemo normal arm64 (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">export</span> IPHONEOS_DEPLOYMENT_TARGET=12.2</span><br><span class="line">    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.2.sdk -L/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos -F/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos -filelist /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/TYGameSceneDemo.LinkFileList -Xlinker -rpath -Xlinker @executable_path/Frameworks -miphoneos-version-min=12.2 -dead_strip -Xlinker -object_path_lto -Xlinker /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/TYGameSceneDemo_lto.o -Xlinker -export_dynamic -Xlinker -no_deduplicate -fembed-bitcode-marker -fobjc-arc -fobjc-link-runtime -Xlinker -dependency_info -Xlinker /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Objects-normal/arm64/TYGameSceneDemo_dependency_info.dat -o /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app/TYGameSceneDemo</span><br><span class="line"></span><br><span class="line">Copy SceneKit assets /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/art.scnassets (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    /Applications/Xcode.app/Contents/Developer/usr/bin/copySceneKitAssets /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/art.scnassets -o /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app/art.scnassets --target-platform=iphoneos --target-version=12.2 --target-build-dir=/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos --resources-folder-path=TYGameSceneDemo.app</span><br><span class="line">copySceneKitAssets: Copy ship.scn</span><br><span class="line">copySceneKitAssets: Copy texture.png</span><br><span class="line">copySceneKitAssets: Running scntool on /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app/art.scnassets/ship.scn</span><br><span class="line"></span><br><span class="line">CompileAssetCatalog /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/Assets.xcassets (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    /Applications/Xcode.app/Contents/Developer/usr/bin/actool --output-format human-readable-text --notices --warnings --<span class="built_in">export</span>-dependency-info /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/assetcatalog_dependencies --output-partial-info-plist /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/assetcatalog_generated_info.plist --app-icon AppIcon --compress-pngs --<span class="built_in">enable</span>-on-demand-resources YES --sticker-pack-identifier-prefix top.sheldon.TYGameSceneDemo.sticker-pack. --target-device iphone --target-device ipad --minimum-deployment-target 12.2 --platform iphoneos --product-type com.apple.product-type.application --compile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/Assets.xcassets</span><br><span class="line">/* com.apple.actool.compilation-results */</span><br><span class="line">/Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/assetcatalog_generated_info.plist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CompileStoryboard /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/Base.lproj/Main.storyboard (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">export</span> XCODE_DEVELOPER_USR_PATH=/Applications/Xcode.app/Contents/Developer/usr/bin/..</span><br><span class="line">    /Applications/Xcode.app/Contents/Developer/usr/bin/ibtool --errors --warnings --notices --module TYGameSceneDemo --output-partial-info-plist /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Base.lproj/Main-SBPartialInfo.plist --auto-activate-custom-fonts --target-device iphone --target-device ipad --minimum-deployment-target 12.2 --output-format human-readable-text --compilation-directory /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Base.lproj /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/Base.lproj/Main.storyboard</span><br><span class="line"></span><br><span class="line">CompileStoryboard /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/Base.lproj/LaunchScreen.storyboard (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">export</span> XCODE_DEVELOPER_USR_PATH=/Applications/Xcode.app/Contents/Developer/usr/bin/..</span><br><span class="line">    /Applications/Xcode.app/Contents/Developer/usr/bin/ibtool --errors --warnings --notices --module TYGameSceneDemo --output-partial-info-plist /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Base.lproj/LaunchScreen-SBPartialInfo.plist --auto-activate-custom-fonts --target-device iphone --target-device ipad --minimum-deployment-target 12.2 --output-format human-readable-text --compilation-directory /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Base.lproj /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/Base.lproj/LaunchScreen.storyboard</span><br><span class="line"></span><br><span class="line">ProcessInfoPlistFile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app/Info.plist /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/Info.plist (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">builtin</span>-infoPlistUtility /Users/sheldon/Documents/TYDemos/TYGameSceneDemo/TYGameSceneDemo/Info.plist -producttype com.apple.product-type.application -genpkginfo /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app/PkgInfo -expandbuildsettings -format binary -platform iphoneos -additionalcontentfile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Base.lproj/LaunchScreen-SBPartialInfo.plist -additionalcontentfile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Base.lproj/Main-SBPartialInfo.plist -additionalcontentfile /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/assetcatalog_generated_info.plist -requiredArchitecture arm64 -o /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app/Info.plist</span><br><span class="line"></span><br><span class="line">LinkStoryboards (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">export</span> XCODE_DEVELOPER_USR_PATH=/Applications/Xcode.app/Contents/Developer/usr/bin/..</span><br><span class="line">    /Applications/Xcode.app/Contents/Developer/usr/bin/ibtool --errors --warnings --notices --module TYGameSceneDemo --target-device iphone --target-device ipad --minimum-deployment-target 12.2 --output-format human-readable-text --link /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Base.lproj/LaunchScreen.storyboardc /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/Base.lproj/Main.storyboardc</span><br><span class="line"></span><br><span class="line">CodeSign /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">export</span> CODESIGN_ALLOCATE=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/codesign_allocate</span><br><span class="line"></span><br><span class="line">Signing Identity:     <span class="string">"iPhone Developer: sheldondev@163.com (***********)"</span></span><br><span class="line">Provisioning Profile: <span class="string">"iOS Team Provisioning Profile: top.sheldon.TYGameSceneDemo"</span></span><br><span class="line">                      (e91c7402-e02a-45ac-aff3-c73c563abcfb)</span><br><span class="line"></span><br><span class="line">    /usr/bin/codesign --force --sign A4F946689397857CA5F807E9FFB76913085216E4 --entitlements /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Intermediates.noindex/TYGameSceneDemo.build/Debug-iphoneos/TYGameSceneDemo.build/TYGameSceneDemo.app.xcent --timestamp=none /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app</span><br><span class="line"></span><br><span class="line">Validate /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    <span class="built_in">builtin</span>-validationUtility /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app</span><br><span class="line"></span><br><span class="line">Touch /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app (<span class="keyword">in</span> target: TYGameSceneDemo)</span><br><span class="line">    <span class="built_in">cd</span> /Users/sheldon/Documents/TYDemos/TYGameSceneDemo</span><br><span class="line">    /usr/bin/touch -c /Users/sheldon/Library/Developer/Xcode/DerivedData/TYGameSceneDemo-fnnafecckruutfccltqcqgjtvkco/Build/Products/Debug-iphoneos/TYGameSceneDemo.app</span><br><span class="line"></span><br><span class="line">** BUILD SUCCEEDED **</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/55b80e746e38" target="_blank" rel="noopener">通过Xcode命令行编译</a><br><a href="https://www.jianshu.com/p/9b8bc8351223" target="_blank" rel="noopener">用xcconfig文件配置iOS app环境变量</a><br><a href="https://developer.apple.com/library/archive/technotes/tn2339/_index.html#//apple_ref/doc/uid/DTS40014588-CH1-HOW_DO_I_BUILD_MY_PROJECTS_FROM_THE_COMMAND_LINE_" target="_blank" rel="noopener">官方文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;h2 id=&quot;相关命令&quot;&gt;&lt;a href=&quot;#相关命令&quot; class=&quot;headerlink&quot; title=&quot;相关命令&quot;&gt;&lt;/a&gt;相关命令&lt;/h2&gt;&lt;h3 id=&quot;查看目前我使用的工具XCODE版本&quot;&gt;&lt;a href=&quot;#查看目前我使用的工具XCODE版本&quot; class=&quot;headerlink&quot; title=&quot;查看目前我使用的工具XCODE版本&quot;&gt;&lt;/a&gt;查看目前我使用的工具XCODE版本&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# command&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xcode-select --&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;-path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# print&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/Applications/Xcode.app/Contents/Developer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="hide" scheme="http://yoursite.com/categories/hide/"/>
    
    
      <category term="hide" scheme="http://yoursite.com/tags/hide/"/>
    
  </entry>
  
  <entry>
    <title>java注解</title>
    <link href="http://yoursite.com/2019/08/12/java%E6%B3%A8%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/08/12/java注解/</id>
    <published>2019-08-12T07:29:19.000Z</published>
    <updated>2024-02-18T09:27:10.625Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是注解"><a href="#什么是注解" class="headerlink" title="什么是注解"></a>什么是注解</h2><p>注解，顾名思义，注解,就是对某一事物进行添加注释说明，会存放一些信息，这些信息可能对以后某个时段来说是很有用处的。<br><a id="more"></a></p><h2 id="java中的注解"><a href="#java中的注解" class="headerlink" title="java中的注解"></a>java中的注解</h2><p>Java注解又叫java标注，java提供了一套机制，使得我们可以对方法、类、参数、包、域以及变量等添加标准(即附上某些信息)。且在以后某个时段通过反射将标注的信息提取出来以供使用。</p><h2 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h2><h3 id="为什么自定义注解"><a href="#为什么自定义注解" class="headerlink" title="为什么自定义注解"></a>为什么自定义注解</h3><p>Java从1.5版本以后默认内置三个标注：</p><ul><li><code>@Override</code>:只能用在方法之上的，用来告诉别人这一个方法是改写父类的。</li><li><code>@Deprecated</code>:建议别人不要使用旧的API的时候用的,编译的时候会用产生警告信息,可以设定在程序里的所有的元素上。</li><li><code>@SuppressWarnings</code>:这一个类型可以来暂时把一些警告信息消息关闭。<br>但是，仅仅这三个标注是不能满足我们开发时一些需求的。所以java允许我们自定义注解来使用。<h3 id="怎么自定义注解"><a href="#怎么自定义注解" class="headerlink" title="怎么自定义注解"></a>怎么自定义注解</h3>自定义步骤大致分为两步：</li></ul><ol><li>通过<code>@interface</code>关键字声明注解名称，以及注解的成员属性或者叫做注解的参数。</li><li>使用java内置的四个元注解对这个自定义标注的功能和范围进行一些限制。</li></ol><h4 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a>元注解</h4><p>元注解，就是定义注解的注解，也就是说这些元注解是的作用就是专门用来约束其它注解的注解。请区别上面那三个注解，他们也是通过元注解定义而来的。<br>元注解有哪些呢，主要有四个<code>@Target</code>,<code>@Retention</code>,<code>@Documented</code>,<code>@Inherited</code></p><ul><li><code>@Target</code> 表示该注解用于什么地方，可能的 ElemenetType 参数包括： <ul><li><code>ElemenetType.CONSTRUCTOR</code> 构造器声明 </li><li><code>ElemenetType.FIELD</code> 域声明（包括 enum 实例） </li><li><code>ElemenetType.LOCAL_VARIABLE</code> 局部变量声明 </li><li><code>ElemenetType.METHOD</code> 方法声明 </li><li><code>ElemenetType.PACKAGE</code> 包声明 </li><li><code>ElemenetType.PARAMETER</code> 参数声明 </li><li><code>ElemenetType.TYPE</code> 类，接口（包括注解类型）或enum声明 </li></ul></li><li><code>@Retention</code> 表示在什么级别保存该注解信息。可选的 RetentionPolicy 参数包括： <ul><li><code>RetentionPolicy.SOURCE</code> 注解将被编译器丢弃 </li><li><code>RetentionPolicy.CLASS</code> 注解在class文件中可用，但会被VM丢弃 </li><li><code>RetentionPolicy.RUNTIME</code> VM将在运行期也保留注释，因此可以通过反射机制读取注解的信息。 </li></ul></li><li><code>@Documented</code> 将此注解包含在 javadoc 中 </li><li><code>@Inherited</code> 允许子类继承父类中的注解 <h4 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h4></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(ElementType.TYPE) <span class="comment">// 这个标注用于类</span></span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME) <span class="comment">//这个标注会一直保留到运行时</span></span><br><span class="line"><span class="meta">@Documented</span> <span class="comment">// 将此注解包含在javadoc中</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> TYDescription &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">Value</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> TYName &#123;</span><br><span class="line">    <span class="function">String <span class="title">originate</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">community</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用注解"><a href="#使用注解" class="headerlink" title="使用注解"></a>使用注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TYName</span>(originate = <span class="string">"Sheldon"</span>, community = <span class="string">"sheldon.com"</span>)</span><br><span class="line"><span class="meta">@TYDescription</span>(Value = <span class="string">"desc String!!!"</span>)</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是注解&quot;&gt;&lt;a href=&quot;#什么是注解&quot; class=&quot;headerlink&quot; title=&quot;什么是注解&quot;&gt;&lt;/a&gt;什么是注解&lt;/h2&gt;&lt;p&gt;注解，顾名思义，注解,就是对某一事物进行添加注释说明，会存放一些信息，这些信息可能对以后某个时段来说是很有用处的。&lt;br&gt;
    
    </summary>
    
      <category term="hide" scheme="http://yoursite.com/categories/hide/"/>
    
    
      <category term="hide" scheme="http://yoursite.com/tags/hide/"/>
    
  </entry>
  
  <entry>
    <title>kvocontroller使用和解析</title>
    <link href="http://yoursite.com/2019/08/12/kvocontroller%E4%BD%BF%E7%94%A8%E5%92%8C%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2019/08/12/kvocontroller使用和解析/</id>
    <published>2019-08-12T07:27:59.000Z</published>
    <updated>2024-02-18T09:27:10.626Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/facebook/KVOController" target="_blank" rel="noopener">facebook/KVOController</a>是对Cocoa中KVO的封装。它提供简单、现代的API，并且是线程安全的。优点如下：</p><ul><li>通知是通过block、action或者NSKeyValueObserving回调（即-observeValueForKeyPath:ofObject:change:context）来实现；</li><li>不会出现移除observer的异常；</li><li>在controller销毁时隐式地移除observer；</li><li>保证了线程安全。<br>简单地说，KVOController让我们更优雅、简单、安全地使用KVO。</li></ul><a id="more"></a><h2 id="使用KVOController"><a href="#使用KVOController" class="headerlink" title="使用KVOController"></a>使用KVOController</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入框架</span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;KVOController/KVOController.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()</span></span><br><span class="line"><span class="comment">// 设置示例模型和示例按钮</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>)TestModel *model;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>)<span class="built_in">UIButton</span> *button;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置KVO</span></span><br><span class="line">FBKVOController *kvoController = [FBKVOController controllerWithObserver:<span class="keyword">self</span>];</span><br><span class="line"><span class="keyword">self</span>.KVOController = kvoController;</span><br><span class="line"><span class="comment">//设置model</span></span><br><span class="line"><span class="keyword">self</span>.model = [TestModel new];</span><br><span class="line"><span class="keyword">self</span>.model.name = <span class="string">@"hah"</span>;</span><br><span class="line"><span class="comment">// 添加一个button</span></span><br><span class="line"><span class="keyword">self</span>.button = [<span class="built_in">UIButton</span> buttonWithType:<span class="built_in">UIButtonTypeSystem</span>];</span><br><span class="line"><span class="keyword">self</span>.button.frame = <span class="built_in">CGRectMake</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">50</span>);</span><br><span class="line">[<span class="keyword">self</span>.button setTitle:<span class="keyword">self</span>.model.name forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">[<span class="keyword">self</span>.button addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(buttonClick:) forControlEvents:<span class="built_in">UIControlEventTouchUpInside</span>];</span><br><span class="line">[<span class="keyword">self</span>.view addSubview:<span class="keyword">self</span>.button];</span><br><span class="line"><span class="comment">//添加监听</span></span><br><span class="line">[<span class="keyword">self</span>.KVOController observe:<span class="keyword">self</span>.model</span><br><span class="line">                    keyPath:FBKVOKeyPath(_model.name)</span><br><span class="line">                    options:<span class="built_in">NSKeyValueObservingOptionNew</span></span><br><span class="line">                      block:^(<span class="keyword">id</span>  _Nullable observer, <span class="keyword">id</span>  _Nonnull object, <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *,<span class="keyword">id</span>&gt; * _Nonnull change)</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, change);</span><br><span class="line">     <span class="built_in">NSString</span> *title = (<span class="built_in">NSString</span> *)change[<span class="string">@"new"</span>];</span><br><span class="line">     [<span class="keyword">self</span>.button setTitle:title forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line"> &#125;];</span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// button 点击方法</span></span><br><span class="line">- (<span class="keyword">void</span>)buttonClick:(<span class="built_in">UIButton</span> *)sender &#123;</span><br><span class="line">    <span class="keyword">self</span>.model.name = [<span class="keyword">self</span>.model.name isEqual: <span class="string">@"hah"</span>] ? <span class="string">@"gogo"</span> : <span class="string">@"hah"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><ul><li><a href="https://www.jianshu.com/p/8deccb9c8398" target="_blank" rel="noopener">KVOController详解</a></li><li><a href="https://draveness.me/kvocontroller" target="_blank" rel="noopener">如何优雅地使用 KVO</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/facebook/KVOController&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;facebook/KVOController&lt;/a&gt;是对Cocoa中KVO的封装。它提供简单、现代的API，并且是线程安全的。优点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通知是通过block、action或者NSKeyValueObserving回调（即-observeValueForKeyPath:ofObject:change:context）来实现；&lt;/li&gt;
&lt;li&gt;不会出现移除observer的异常；&lt;/li&gt;
&lt;li&gt;在controller销毁时隐式地移除observer；&lt;/li&gt;
&lt;li&gt;保证了线程安全。&lt;br&gt;简单地说，KVOController让我们更优雅、简单、安全地使用KVO。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="hide" scheme="http://yoursite.com/categories/hide/"/>
    
    
      <category term="hide" scheme="http://yoursite.com/tags/hide/"/>
    
  </entry>
  
  <entry>
    <title>Notification与多线程</title>
    <link href="http://yoursite.com/2019/08/12/Notification%E4%B8%8E%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/08/12/Notification与多线程/</id>
    <published>2019-08-12T07:26:06.000Z</published>
    <updated>2024-02-18T09:27:10.623Z</updated>
    
    <content type="html"><![CDATA[<p>原文：</p><blockquote><p>In a multithreaded application, notifications are always delivered in the thread in which the notification was posted, which may not be the same thread in which an observer registered itself.</p></blockquote><p>翻译：</p><blockquote><p>在多线程应用中，Notification在哪个线程中post，就在哪个线程中被转发，而不一定是在注册观察者的那个线程中。</p></blockquote><a id="more"></a><p>举个🌰：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主线程中add</span></span><br><span class="line">[[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(observerSelect) name:<span class="string">@"qwer"</span> object:<span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"1.current thread -- %@"</span>, [<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子线程中post</span></span><br><span class="line">dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(<span class="number">3.0</span> * <span class="built_in">NSEC_PER_SEC</span>)), dispatch_get_global_queue(<span class="number">0</span>, <span class="number">0</span>), ^&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"3.current thread -- %@"</span>, [<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line">   [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotificationName:<span class="string">@"qwer"</span> object:<span class="literal">nil</span>];</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)observerSelect &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"2.current thread -- %@"</span>, [<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印结果：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-26</span> <span class="number">11</span>:<span class="number">24</span>:<span class="number">29.987543</span>+<span class="number">0800</span> timerTest[<span class="number">46207</span>:<span class="number">2785353</span>] <span class="number">1.</span>current thread -- &lt;<span class="built_in">NSThread</span>: <span class="number">0x600002814d00</span>&gt;&#123;number = <span class="number">1</span>, name = main&#125;</span><br><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-26</span> <span class="number">11</span>:<span class="number">24</span>:<span class="number">33.270912</span>+<span class="number">0800</span> timerTest[<span class="number">46207</span>:<span class="number">2785409</span>] <span class="number">3.</span>current thread -- &lt;<span class="built_in">NSThread</span>: <span class="number">0x60000284e880</span>&gt;&#123;number = <span class="number">3</span>, name = (null)&#125;</span><br><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-26</span> <span class="number">11</span>:<span class="number">24</span>:<span class="number">33.271095</span>+<span class="number">0800</span> timerTest[<span class="number">46207</span>:<span class="number">2785409</span>] <span class="number">2.</span>current thread -- &lt;<span class="built_in">NSThread</span>: <span class="number">0x60000284e880</span>&gt;&#123;number = <span class="number">3</span>, name = (null)&#125;</span><br></pre></td></tr></table></figure></p><p>虽然我们在主线程中注册了通知者，但在全局队列中post，并不是在主线程中处理的，所以，我们在处理回调结果时，一定要注意线程问题。</p><p>那么，我们如何能在子线程中post，在主线程中进行处理呢？</p><p>看看官方文档：</p><blockquote><p>For example, if an object running in a background thread is listening for notifications from the user interface, such as a window closing, you would like to receive the notifications in the background thread instead of the main thread. In these cases, you must capture the notifications as they are delivered on the default thread and redirect them to the appropriate thread.</p></blockquote><p>翻译：</p><blockquote><p>例如，如果在后台线程中运行的对象正在侦听来自用户界面的通知（例如关闭窗口），则您希望在后台线程而不是主线程中接收通知。在这些情况下，您必须捕获在默认线程上传递的通知，并将它们重定向到相应的线程。</p></blockquote><p>根据官方文档修改我们上面的例子：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> () &lt;<span class="title">NSMachPortDelegate</span>&gt;</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">NSMutableArray</span>    *notifications;         <span class="comment">// 通知队列</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">NSThread</span>          *notificationThread;    <span class="comment">// 期望线程</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">NSLock</span>            *notificationLock;      <span class="comment">// 用于对通知队列加锁的锁对象，避免线程冲突</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>) <span class="built_in">NSMachPort</span>        *notificationPort;      <span class="comment">// 用于向期望线程发送信号的通信端口</span></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="keyword">self</span>.notifications = [[<span class="built_in">NSMutableArray</span> alloc] init];</span><br><span class="line"><span class="keyword">self</span>.notificationLock = [[<span class="built_in">NSLock</span> alloc] init];</span><br><span class="line">    </span><br><span class="line"><span class="keyword">self</span>.notificationThread = [<span class="built_in">NSThread</span> currentThread];</span><br><span class="line"><span class="keyword">self</span>.notificationPort = [[<span class="built_in">NSMachPort</span> alloc] init];</span><br><span class="line"><span class="keyword">self</span>.notificationPort.delegate = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 往当前线程的run loop添加端口源</span></span><br><span class="line"><span class="comment">// 当Mach消息到达而接收线程的run loop没有运行时，则内核会保存这条消息，直到下一次进入run loop</span></span><br><span class="line">[[<span class="built_in">NSRunLoop</span> currentRunLoop] addPort:<span class="keyword">self</span>.notificationPort</span><br><span class="line">                            forMode:(__bridge <span class="built_in">NSString</span> *)kCFRunLoopCommonModes];</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">[[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(observerSelectNotification:) name:<span class="string">@"qwer"</span> object:<span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"1.current thread -- %@"</span>, [<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line">    </span><br><span class="line">dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(<span class="number">3.0</span> * <span class="built_in">NSEC_PER_SEC</span>)), dispatch_get_global_queue(<span class="number">0</span>, <span class="number">0</span>), ^&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"3.current thread -- %@"</span>, [<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotificationName:<span class="string">@"qwer"</span> object:<span class="literal">nil</span>];</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Delegates are sent this if they respond, otherwise they</span></span><br><span class="line"><span class="comment">// are sent handlePortMessage:; argument is the raw Mach message</span></span><br><span class="line">- (<span class="keyword">void</span>)handleMachMessage:(<span class="keyword">void</span> *)msg&#123;</span><br><span class="line">    [<span class="keyword">self</span>.notificationLock lock];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"5.current thread -- %@"</span>, [<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line">    <span class="keyword">while</span> ([<span class="keyword">self</span>.notifications count]) &#123;</span><br><span class="line">        <span class="built_in">NSNotification</span> *notification = [<span class="keyword">self</span>.notifications objectAtIndex:<span class="number">0</span>];</span><br><span class="line">        [<span class="keyword">self</span>.notifications removeObjectAtIndex:<span class="number">0</span>];</span><br><span class="line">        [<span class="keyword">self</span>.notificationLock unlock];</span><br><span class="line">        [<span class="keyword">self</span> observerSelectNotification:notification];</span><br><span class="line">        [<span class="keyword">self</span>.notificationLock lock];</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.notificationLock unlock];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)observerSelectNotification:(<span class="built_in">NSNotification</span> *)notification &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ([<span class="built_in">NSThread</span> currentThread] != _notificationThread) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"4.current thread -- %@"</span>, [<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line">        <span class="comment">// Forward the notification to the correct thread.</span></span><br><span class="line">        [<span class="keyword">self</span>.notificationLock lock];</span><br><span class="line">        [<span class="keyword">self</span>.notifications addObject:notification];</span><br><span class="line">        [<span class="keyword">self</span>.notificationLock unlock];</span><br><span class="line">        [<span class="keyword">self</span>.notificationPort sendBeforeDate:[<span class="built_in">NSDate</span> date]</span><br><span class="line">                                   components:<span class="literal">nil</span></span><br><span class="line">                                         from:<span class="literal">nil</span></span><br><span class="line">                                     reserved:<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"2.current thread -- %@"</span>, [<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"process notification"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-26</span> <span class="number">11</span>:<span class="number">58</span>:<span class="number">30.826178</span>+<span class="number">0800</span> timerTest[<span class="number">47621</span>:<span class="number">2830678</span>] <span class="number">1.</span>current thread -- &lt;<span class="built_in">NSThread</span>: <span class="number">0x6000023c93c0</span>&gt;&#123;number = <span class="number">1</span>, name = main&#125;</span><br><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-26</span> <span class="number">11</span>:<span class="number">58</span>:<span class="number">33.826488</span>+<span class="number">0800</span> timerTest[<span class="number">47621</span>:<span class="number">2830764</span>] <span class="number">3.</span>current thread -- &lt;<span class="built_in">NSThread</span>: <span class="number">0x600002388740</span>&gt;&#123;number = <span class="number">3</span>, name = (null)&#125;</span><br><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-26</span> <span class="number">11</span>:<span class="number">58</span>:<span class="number">33.826702</span>+<span class="number">0800</span> timerTest[<span class="number">47621</span>:<span class="number">2830764</span>] <span class="number">4.</span>current thread -- &lt;<span class="built_in">NSThread</span>: <span class="number">0x600002388740</span>&gt;&#123;number = <span class="number">3</span>, name = (null)&#125;</span><br><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-26</span> <span class="number">11</span>:<span class="number">58</span>:<span class="number">33.826899</span>+<span class="number">0800</span> timerTest[<span class="number">47621</span>:<span class="number">2830678</span>] <span class="number">5.</span>current thread -- &lt;<span class="built_in">NSThread</span>: <span class="number">0x6000023c93c0</span>&gt;&#123;number = <span class="number">1</span>, name = main&#125;</span><br><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-26</span> <span class="number">11</span>:<span class="number">58</span>:<span class="number">33.827061</span>+<span class="number">0800</span> timerTest[<span class="number">47621</span>:<span class="number">2830678</span>] <span class="number">2.</span>current thread -- &lt;<span class="built_in">NSThread</span>: <span class="number">0x6000023c93c0</span>&gt;&#123;number = <span class="number">1</span>, name = main&#125;</span><br><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-26</span> <span class="number">11</span>:<span class="number">58</span>:<span class="number">33.827151</span>+<span class="number">0800</span> timerTest[<span class="number">47621</span>:<span class="number">2830678</span>] process notification</span><br></pre></td></tr></table></figure></p><p>可以看到，我们在全局dispatch队列中抛出的Notification，如愿地在主线程中接收到了。</p><p>这种实现方式的具体解析及其局限性大家可以参考官方文档<a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Notifications/Articles/Threading.html#//apple_ref/doc/uid/20001289-CEGJFDFG" target="_blank" rel="noopener">Delivering Notifications To Particular Threads</a>，在此不多做解释。当然，更好的方法可能是我们自己去子类化一个NSNotificationCenter，或者单独写一个类来处理这种转发。</p><p>参考：</p><ul><li><a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Notifications/Articles/Notifications.html" target="_blank" rel="noopener">Notification Programming Topics</a></li><li><a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Multithreading/ThreadSafetySummary/ThreadSafetySummary.html" target="_blank" rel="noopener">Threading Programming Guide</a></li><li><a href="http://southpeak.github.io/2015/03/14/nsnotification-and-multithreading/" target="_blank" rel="noopener">Notification与多线程</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原文：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In a multithreaded application, notifications are always delivered in the thread in which the notification was posted, which may not be the same thread in which an observer registered itself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;翻译：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在多线程应用中，Notification在哪个线程中post，就在哪个线程中被转发，而不一定是在注册观察者的那个线程中。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="hide" scheme="http://yoursite.com/categories/hide/"/>
    
    
      <category term="hide" scheme="http://yoursite.com/tags/hide/"/>
    
  </entry>
  
  <entry>
    <title>Mac下配置多个ssh-key</title>
    <link href="http://yoursite.com/2019/08/12/Mac%E4%B8%8B%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAssh-key/"/>
    <id>http://yoursite.com/2019/08/12/Mac下配置多个ssh-key/</id>
    <published>2019-08-12T07:02:02.000Z</published>
    <updated>2024-02-18T09:27:10.622Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在我们的工作经常会遇到公司的git仓库需要配置SSH-Key，而自己的github也需要配置SSH-Key，如果你不想使用同一个SSH-Key，那么可以生成多个SSH-Key，从而分别配置不同的仓库。</p></blockquote><a id="more"></a><p>打开终端，查看当前<code>~/.ssh</code>路径中存在的SSH-Key：<br><img src="/Users/sheldon/Pictures/Xnip2019-05-28_15-54-48.jpg" alt></p><p>我的路径下已经存在了一个SSH-Key了，那么接下来再创建一个SSH-Key:</p><p><img src="/Users/sheldon/Pictures/Xnip2019-05-28_15-57-34.jpg" alt></p><p>使用命令创建：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"这里填写你的邮箱地址"</span></span><br></pre></td></tr></table></figure></p><p>在<code>Enter file in which to save the key (&lt;文件路径&gt;):</code>这里输入自定义的SSH-Key名称<strong>（必须写，不然会默认覆盖原来的Key）</strong></p><p>例如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (&lt;文件路径&gt;): id_rsa_github</span><br></pre></td></tr></table></figure></p><p>然后输入密码（密码不可见）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure></p><p>当看到这样的字样，说明创建成功了：<br><img src="/Users/sheldon/Pictures/Xnip2019-05-28_16-01-35.jpg" alt></p><p>将SSH-Key添加到ssh-agent中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add id_rsa_github</span><br></pre></td></tr></table></figure></p><p>输入密码:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase <span class="keyword">for</span> id_rsa_github:</span><br></pre></td></tr></table></figure></p><p>添加成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Identity added: id_rsa_github (&lt;邮箱地址&gt;)</span><br></pre></td></tr></table></figure></p><p>查看公钥：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa_github.pub</span><br></pre></td></tr></table></figure></p><p>将公钥配置到github的ssh-key中；最后验证是否联通：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>成功字样：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi &lt;这里是github的用户名&gt;! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在我们的工作经常会遇到公司的git仓库需要配置SSH-Key，而自己的github也需要配置SSH-Key，如果你不想使用同一个SSH-Key，那么可以生成多个SSH-Key，从而分别配置不同的仓库。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>jenkins 打包流程</title>
    <link href="http://yoursite.com/2019/08/12/jenkins%E6%89%93%E5%8C%85%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/08/12/jenkins打包流程/</id>
    <published>2019-08-12T07:02:02.000Z</published>
    <updated>2024-02-18T09:27:10.625Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装jenkins</h2><p>我们使用Homebrew安装jenkins</p><a id="more"></a><h3 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h3><ol><li>首先确认机器有没有安装Homebrew</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew -v</span><br></pre></td></tr></table></figure><ol><li>如果未安装，则安装Homebrew</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><ol><li>安装java环境</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install Caskroom/cask/java</span><br></pre></td></tr></table></figure><p>由于现在的java最高版本为12.0，jenkins不支持，所以我们安装一个第三方的java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install homebrew/cask-versions/adoptopenjdk8</span><br></pre></td></tr></table></figure><ol><li>安装jenkins</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install jenkins</span><br></pre></td></tr></table></figure><ol><li>链接文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sfv /usr/local/opt/jenkins/*.plist ~/Library/LaunchAgents</span><br></pre></td></tr></table></figure><ol><li>启动jenkins</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl load ~/Library/LaunchAgents/homebrew.mxcl.jenkins.plist</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装jenkins&quot;&gt;&lt;a href=&quot;#安装jenkins&quot; class=&quot;headerlink&quot; title=&quot;安装jenkins&quot;&gt;&lt;/a&gt;安装jenkins&lt;/h2&gt;&lt;p&gt;我们使用Homebrew安装jenkins&lt;/p&gt;
    
    </summary>
    
      <category term="hide" scheme="http://yoursite.com/categories/hide/"/>
    
    
      <category term="hide" scheme="http://yoursite.com/tags/hide/"/>
    
  </entry>
  
  <entry>
    <title>个人简历</title>
    <link href="http://yoursite.com/2019/03/28/curriculumVitae/"/>
    <id>http://yoursite.com/2019/03/28/curriculumVitae/</id>
    <published>2019-03-28T06:39:09.000Z</published>
    <updated>2024-02-18T09:27:10.623Z</updated>
    
    <content type="html"><![CDATA[<h2 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h2><style>table th:nth-of-type(1) {    width: 20%;}</style><table><thead><tr><th style="text-align:left">姓名 / 性别</th><th style="text-align:left">田宇 / 男</th></tr></thead><tbody><tr><td style="text-align:left">专业</td><td style="text-align:left">网络工程</td></tr><tr><td style="text-align:left">毕业院校</td><td style="text-align:left">中北大学信息商务学院</td></tr><tr><td style="text-align:left">E-mail</td><td style="text-align:left">tinarychina@gmail.com / ty24089@163.com</td></tr><tr><td style="text-align:left">电话/微信</td><td style="text-align:left">17722529692</td></tr><tr><td style="text-align:left">工作年限</td><td style="text-align:left">5年</td></tr><tr><td style="text-align:left">技术博客</td><td style="text-align:left"><a href="https://sheldon.top" target="_blank" rel="noopener">https://sheldon.top</a></td></tr><tr><td style="text-align:left">求职意向</td><td style="text-align:left">iOS开发工程师</td></tr><tr><td style="text-align:left">现居/期望城市</td><td style="text-align:left">北京市</td></tr></tbody></table><h2 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h2><h3 id="深圳市闪拍精灵网络技术有限公司（2016-05-2018-12）"><a href="#深圳市闪拍精灵网络技术有限公司（2016-05-2018-12）" class="headerlink" title="深圳市闪拍精灵网络技术有限公司（2016.05-2018.12）"></a>深圳市闪拍精灵网络技术有限公司（2016.05-2018.12）</h3><blockquote><p>负责客户端核心功能的开发和维护以及产品的迭代开发和优化，编写相关开发文档，参与需求评审和接口评审并讨论相关问题，在客户端组分配开发任务以及控制开发进度；在开发过程中协调API后台、移动端、web的工作。</p></blockquote><p><strong>作品：</strong>90秒、Ai优惠、快淘优品、惠拍优品、闪电拍卖<br><strong>项目内容：</strong></p><ul><li>项目架构以MVC为主，部分项目使用MVVM，统一后台接口规范 RESTful 风格。</li><li>项目以Objective-C语言为主，部分页面使用Swift编写。</li><li>部分项目使用响应式框架，主要是为了解决数据变化引起的页面布局和结构的改变。</li><li>项目使用自定义埋点（90秒使用GrowingIO无埋点框架）,运用分类为按钮添加action监听，添加编码属性。</li><li>使用GCD和自定义NSOpration处理数据内容，接口调用等。</li><li>使用Runtime实现通过CMS配置相关内容，控制页面跳转不同页面。</li><li>自定义DispatchTimer并管理Timer组，实现使用CACurrentMediaTime()计算倒计时数据，抛弃控制器做计算的过程，减轻控制器负担。</li><li>封装TableView，减少控制器中相关代码量。</li><li>使用CABasicAnimation实现相关页面动画效果。</li></ul><h3 id="北京圣合软件科技有限公司（2015-03-2016-02）"><a href="#北京圣合软件科技有限公司（2015-03-2016-02）" class="headerlink" title="北京圣合软件科技有限公司（2015.03-2016.02）"></a>北京圣合软件科技有限公司（2015.03-2016.02）</h3><blockquote><p>负责客户端相关功能的开发和迭代维护，配合其他相关部门提供相应的产品技术支持。</p></blockquote><p><strong>作品：</strong>留留学<br><strong>项目内容：</strong>项目严格遵循MVC设计框架模式开发,降低耦合度；多处使用GCD多线程技术；使用Block回调机制进行多页面之间传值；在应用内部使用系统提供的内置浏览器控件，加载网页数据；集成了第三方SDK环信即时聊天系统，使用户之间可以实时聊天并使用苹果公司的APNS服务，实时的推送消息到用户；集成第三方分享平台，将链接分享至第三方社交应用等。</p><h3 id="世界邦信息技术有限公司（2013-07-2015-02）"><a href="#世界邦信息技术有限公司（2013-07-2015-02）" class="headerlink" title="世界邦信息技术有限公司（2013.07-2015.02）"></a>世界邦信息技术有限公司（2013.07-2015.02）</h3><blockquote><p>负责公司iPhone手机客户端的的开发和维护，协助高级开发人员完成项目的开发和迭代。</p></blockquote><p><strong>作品：</strong>行程大师、全球地铁图<br><strong>项目内容：</strong>通过自定义UI控件与控件之间的搭配使用，使App界面丰富多彩，方便用户使用和交互；使用RunLoop中的commonModes实现拖动页面和scrollView滚动之间互不干扰；混合开发，在应用内部使用系统提供的内置浏览器控件，加载网页数据，达到更快捷的开发App并且方便于维护；使用苹果公司的APNS服务，实时的推送消息到用户等。</p><h2 id="技能列表"><a href="#技能列表" class="headerlink" title="技能列表"></a>技能列表</h2><ul><li>精通Objective-C语言，熟练掌握iOS平台各类API，熟悉iOS内存管理机制，熟悉iOS多线程。</li><li>熟悉Swift语言及其特性以及SDK等。</li><li>能熟练的运用AFNetworking、SDWebImage、Masonry、Reactivecocoa等开源项目。</li><li>能熟练使用纯代码或者Storyboard，xib进行开发。</li><li>能熟练的使用Instruments下的性能调试工具进行性能优化。</li><li>熟悉网络数据(JSON/XML)的请求以及解析并转化模型，Charles网络数据抓包分析。</li><li>熟练使用Git、SVN等代码管理工具。</li><li>熟悉MVC、MVVM、委托代理、通知观察等开发模式。</li><li>熟悉TCP/UDP/HTTP/HTTPS/XMPP等协议。</li><li>熟悉腾讯Bugly的Crash错误分析，熟悉GrowingIO无埋点技术等。</li><li>熟悉持续集成Jenkins,fastlane等工具。</li><li>熟悉iOS数据持久化，NSUserDefaults、NSKeyedArchiver、SQLite3、 CoreData等。</li><li>熟悉后台接口规范以及各种调试工具。</li><li>了解React Native、Weex、Flutter等跨平台开发技术。</li></ul><h2 id="兴趣爱好"><a href="#兴趣爱好" class="headerlink" title="兴趣爱好"></a>兴趣爱好</h2><ul><li>搭建过VPN，目前使用的为自己在Google Cloud Platform搭建的CentOS7服务器。</li><li>使用Python编写一些抓取图片的小脚本。</li><li>搭建过持续集成jenkins+fir+钉钉机器人通知等持续集成工具，可以自动打包、上传并通知测试人员。</li><li>个人喜欢各种球类运动和唱歌。</li></ul><h2 id="自我评价"><a href="#自我评价" class="headerlink" title="自我评价"></a>自我评价</h2><ul><li>责任心强，性格外向，人际沟通能力良好，有协调团队工作的能力，喜欢拥抱新技术。</li><li>工作认真负责，认真对待每一件事情，每一个技术点，反馈及时，能做到尽早暴露风险以及问题</li><li>工作经验丰富，开发快速，有良好的编程能力和习惯，喜欢规范化代码以及积极优化代码。</li></ul><h2 id="作品链接"><a href="#作品链接" class="headerlink" title="作品链接"></a>作品链接</h2><ul><li><a href="https://itunes.apple.com/cn/app/90%E7%A7%92/id1435124139?mt=8" target="_blank" rel="noopener">90秒</a>、<a href="https://itunes.apple.com/cn/app/ai%E4%BC%98%E6%83%A0/id1396344295?mt=8" target="_blank" rel="noopener">Ai优惠</a>、<a href="https://itunes.apple.com/cn/app/%E5%BF%AB%E6%B7%98%E4%BC%98%E5%93%81/id1383652396" target="_blank" rel="noopener">快淘优品</a>、<a href>惠拍优品</a>、<a href>闪电拍卖</a></li></ul><h2 id="社交主页"><a href="#社交主页" class="headerlink" title="社交主页"></a>社交主页</h2><ul><li>个人博客：<a href="https://sheldon.top" target="_blank" rel="noopener">Sheldon’s blog</a></li><li>GitHub：<a href="https://github.com/FlameTinary" target="_blank" rel="noopener">Sheldon</a></li><li>简书：<a href="https://www.jianshu.com/u/a1e222f75cc7" target="_blank" rel="noopener">搁浅的青蛙</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;个人信息&quot;&gt;&lt;a href=&quot;#个人信息&quot; class=&quot;headerlink&quot; title=&quot;个人信息&quot;&gt;&lt;/a&gt;个人信息&lt;/h2&gt;&lt;style&gt;
table th:nth-of-type(1) {
    width: 20%;
}
&lt;/style&gt;

&lt;ta
      
    
    </summary>
    
      <category term="hide" scheme="http://yoursite.com/categories/hide/"/>
    
    
      <category term="hide" scheme="http://yoursite.com/tags/hide/"/>
    
  </entry>
  
  <entry>
    <title>详细解析HTTP和HTTPS</title>
    <link href="http://yoursite.com/2019/03/04/%E8%AF%A6%E7%BB%86%E8%A7%A3%E6%9E%90HTTP%E5%92%8CHTTPS/"/>
    <id>http://yoursite.com/2019/03/04/详细解析HTTP和HTTPS/</id>
    <published>2019-03-04T05:08:08.000Z</published>
    <updated>2024-02-18T09:27:10.626Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>HTTP协议被用于在Web浏览器和网站服务器之间传递信息，HTTP协议以明文方式发送内容，不提供任何方式的数据加密，因此，HTTP协议不适合传输一些敏感信息，比如：信用卡号、密码等支付信息。<br>为了解决HTTP协议的这一缺陷，需要使用另一种协议：HTTPS，为了数据传输的安全，HTTPS在HTTP的基础上加入了SSL协议，SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。  </p></blockquote><a id="more"></a><h2 id="HTTP和HTTPS的基本概念"><a href="#HTTP和HTTPS的基本概念" class="headerlink" title="HTTP和HTTPS的基本概念"></a>HTTP和HTTPS的基本概念</h2><p>HTTP（HyperText Transfer Protocol：超文本传输协议）：是互联网上应用最为广泛的一种协议，用于从WWW服务器传输超文本到本地浏览器的传输协议，它可以使浏览器更加高效，使网络传输减少。<br>HTTP 默认工作在 TCP 协议 80 端口，用户访问网站 <code>http://</code> 打头的都是标准 HTTP 服务。</p><p>HTTPS（Hypertext Transfer Protocol Secure：超文本传输安全协议）：是以安全为目标的HTTP通道，简单讲是HTTP的安全版，即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。<br>HTTPS 默认工作在 TCP 协议443端口，它的工作流程一般如以下方式：</p><ol><li>TCP 三次同步握手</li><li>客户端验证服务器数字证书</li><li>DH 算法协商对称加密算法的密钥、hash 算法的密钥</li><li>SSL 安全加密隧道协商完成</li><li>网页以加密的方式传输，用协商的对称加密算法和密钥加密，保证数据机密性；用协商的hash算法进行数据完整性保护，保证数据不被篡改。</li></ol><p>HTTPS协议的主要作用有两种：</p><ol><li>建立一个信息安全通道，来保证数据传输的安全</li><li>确认网站的真实性</li></ol><h2 id="HTTP与HTTPS有什么区别"><a href="#HTTP与HTTPS有什么区别" class="headerlink" title="HTTP与HTTPS有什么区别"></a>HTTP与HTTPS有什么区别</h2><ul><li>HTTP协议是明文传输，因此HTTP协议非常不安全；HTTPS（SSL+HTTP）数据传输过程是加密的，安全性较好。</li><li>使用 HTTPS 协议需要到 CA（Certificate Authority，数字证书认证机构） 申请证书，一般免费证书较少，因而需要一定费用。证书颁发机构如：Symantec、Comodo、GoDaddy 和 GlobalSign 等。</li><li>HTTP 页面响应速度比 HTTPS 快，主要是因为 HTTP 使用 TCP 三次握手建立连接，客户端和服务器需要交换 3 个包，而 HTTPS除了 TCP 的三个包，还要加上 ssl 握手需要的 9 个包，所以一共是 12 个包。</li><li>http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。</li><li>HTTPS 其实就是建构在 SSL/TLS 之上的 HTTP 协议，所以，要比较 HTTPS 比 HTTP 要更耗费服务器资源。</li></ul><h2 id="TCP-三次握手"><a href="#TCP-三次握手" class="headerlink" title="TCP 三次握手"></a>TCP 三次握手</h2><p><img src="http://www.runoob.com/wp-content/uploads/2018/09/05234233-eed6ddcba93c42be8847e98d6da62802.jpg" alt></p><ul><li>第一次握手：客户端尝试连接服务器，向服务器发送 syn 包（同步序列编号Synchronize Sequence Numbers），syn=j，客户端进入 SYN_SEND 状态等待服务器确认</li><li>第二次握手：服务器接收客户端syn包并确认（ack=j+1），同时向客户端发送一个 SYN包（syn=k），即 SYN+ACK 包，此时服务器进入 SYN_RECV 状态</li><li>第三次握手：第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=k+1），此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手<br><img src="http://www.runoob.com/wp-content/uploads/2018/09/dffdff.png" alt></li></ul><h2 id="HTTPS的工作原理"><a href="#HTTPS的工作原理" class="headerlink" title="HTTPS的工作原理"></a>HTTPS的工作原理</h2><p><img src="http://www.runoob.com/wp-content/uploads/2018/09/https-intro.png" alt></p><ol><li><strong>客户端发起HTTPS请求</strong><br>用户在浏览器里输入一个 https 网址，然后连接到 server 的 443 端口。</li><li><strong>服务端配置</strong><br>采用 HTTPS 协议的服务器必须要有一套数字证书，可以自己制作，也可以向组织申请，区别就是自己颁发的证书需要客户端验证通过，才可以继续访问，而使用受信任的公司申请的证书则不会弹出提示页面(startssl 就是个不错的选择，有 1 年的免费服务)。<br>这套证书其实就是一对公钥和私钥，如果对公钥和私钥不太理解，可以想象成一把钥匙和一个锁头，只是全世界只有你一个人有这把钥匙，你可以把锁头给别人，别人可以用这个锁把重要的东西锁起来，然后发给你，因为只有你一个人有这把钥匙，所以只有你才能看到被这把锁锁起来的东西。</li><li><strong>传送证书</strong><br>这个证书其实就是公钥，只是包含了很多信息，如证书的颁发机构，过期时间等等。</li><li><strong>客户端解析证书</strong><br>这部分工作是由客户端的TLS来完成的，首先会验证公钥是否有效，比如颁发机构，过期时间等等，如果发现异常，则会弹出一个警告框，提示证书存在问题。<br>如果证书没有问题，那么就生成一个随机值，然后用证书对该随机值进行加密，就好像上面说的，把随机值用锁头锁起来，这样除非有钥匙，不然看不到被锁住的内容。</li><li><strong>传送加密信息</strong><br>这部分传送的是用证书加密后的随机值，目的就是让服务端得到这个随机值，以后客户端和服务端的通信就可以通过这个随机值来进行加密解密了。</li><li><strong>服务端解密信息</strong><br>服务端用私钥解密后，得到了客户端传过来的随机值(私钥)，然后把内容通过该值进行对称加密，所谓对称加密就是，将信息和私钥通过某种算法混合在一起，这样除非知道私钥，不然无法获取内容，而正好客户端和服务端都知道这个私钥，所以只要加密算法够彪悍，私钥够复杂，数据就够安全。</li><li><strong>传输加密后的信息</strong><br>这部分信息是服务段用私钥加密后的信息，可以在客户端被还原。</li><li><strong>客户端解密信息</strong><br>客户端用之前生成的私钥解密服务段传过来的信息，于是获取了解密后的内容，整个过程第三方即使监听到了数据，也束手无策。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;HTTP协议被用于在Web浏览器和网站服务器之间传递信息，HTTP协议以明文方式发送内容，不提供任何方式的数据加密，因此，HTTP协议不适合传输一些敏感信息，比如：信用卡号、密码等支付信息。&lt;br&gt;为了解决HTTP协议的这一缺陷，需要使用另一种协议：HTTPS，为了数据传输的安全，HTTPS在HTTP的基础上加入了SSL协议，SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="网络" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="HTTP" scheme="http://yoursite.com/tags/HTTP/"/>
    
      <category term="HTTPS" scheme="http://yoursite.com/tags/HTTPS/"/>
    
  </entry>
  
</feed>
